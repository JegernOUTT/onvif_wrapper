/* soapPTZBindingProxy.cpp
   Generated by gSOAP 2.8.40 for onvifgen/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPTZBindingProxy.h"

PTZBindingProxy::PTZBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PTZBindingProxy::PTZBindingProxy(const PTZBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

PTZBindingProxy::PTZBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PTZBindingProxy_init(_soap->imode, _soap->omode);
}

PTZBindingProxy::PTZBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

PTZBindingProxy::PTZBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingProxy_init(iomode, iomode);
}

PTZBindingProxy::PTZBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

PTZBindingProxy::PTZBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingProxy_init(imode, omode);
}

PTZBindingProxy::~PTZBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void PTZBindingProxy::PTZBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns13", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns14", "http://www.w3.org/2005/08/addressing", NULL, NULL},
        {"xmime", "http://www.w3.org/2005/05/xmlmime", NULL, NULL},
        {"ns4", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"ns3", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"ns5", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"ns6", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
PTZBindingProxy *PTZBindingProxy::copy()
{	PTZBindingProxy *dup = SOAP_NEW_COPY(PTZBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

PTZBindingProxy& PTZBindingProxy::operator=(const PTZBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void PTZBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PTZBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PTZBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void PTZBindingProxy::soap_header(struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *PTZBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *PTZBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *PTZBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *PTZBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int PTZBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PTZBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void PTZBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PTZBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PTZBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PTZBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns11__GetServiceCapabilities *ns11__GetServiceCapabilities, _ns11__GetServiceCapabilitiesResponse &ns11__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetServiceCapabilities soap_tmp___ns11__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities";
	soap_tmp___ns11__GetServiceCapabilities.ns11__GetServiceCapabilities = ns11__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetServiceCapabilitiesResponse*>(&ns11__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetServiceCapabilitiesResponse.soap_get(soap, "ns11:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetConfigurations(const char *endpoint, const char *soap_action, _ns11__GetConfigurations *ns11__GetConfigurations, _ns11__GetConfigurationsResponse &ns11__GetConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetConfigurations soap_tmp___ns11__GetConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations";
	soap_tmp___ns11__GetConfigurations.ns11__GetConfigurations = ns11__GetConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetConfigurations(soap, &soap_tmp___ns11__GetConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetConfigurations(soap, &soap_tmp___ns11__GetConfigurations, "-ns11:GetConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetConfigurations(soap, &soap_tmp___ns11__GetConfigurations, "-ns11:GetConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetConfigurationsResponse*>(&ns11__GetConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetConfigurationsResponse.soap_get(soap, "ns11:GetConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetPresets(const char *endpoint, const char *soap_action, _ns11__GetPresets *ns11__GetPresets, _ns11__GetPresetsResponse &ns11__GetPresetsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetPresets soap_tmp___ns11__GetPresets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresets";
	soap_tmp___ns11__GetPresets.ns11__GetPresets = ns11__GetPresets;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetPresets(soap, &soap_tmp___ns11__GetPresets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetPresets(soap, &soap_tmp___ns11__GetPresets, "-ns11:GetPresets", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetPresets(soap, &soap_tmp___ns11__GetPresets, "-ns11:GetPresets", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetPresetsResponse*>(&ns11__GetPresetsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetPresetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetPresetsResponse.soap_get(soap, "ns11:GetPresetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::SetPreset(const char *endpoint, const char *soap_action, _ns11__SetPreset *ns11__SetPreset, _ns11__SetPresetResponse &ns11__SetPresetResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SetPreset soap_tmp___ns11__SetPreset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetPreset";
	soap_tmp___ns11__SetPreset.ns11__SetPreset = ns11__SetPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__SetPreset(soap, &soap_tmp___ns11__SetPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetPreset(soap, &soap_tmp___ns11__SetPreset, "-ns11:SetPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetPreset(soap, &soap_tmp___ns11__SetPreset, "-ns11:SetPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__SetPresetResponse*>(&ns11__SetPresetResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__SetPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetPresetResponse.soap_get(soap, "ns11:SetPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::RemovePreset(const char *endpoint, const char *soap_action, _ns11__RemovePreset *ns11__RemovePreset, _ns11__RemovePresetResponse &ns11__RemovePresetResponse)
{	struct soap *soap = this->soap;
	struct __ns11__RemovePreset soap_tmp___ns11__RemovePreset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset";
	soap_tmp___ns11__RemovePreset.ns11__RemovePreset = ns11__RemovePreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__RemovePreset(soap, &soap_tmp___ns11__RemovePreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__RemovePreset(soap, &soap_tmp___ns11__RemovePreset, "-ns11:RemovePreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__RemovePreset(soap, &soap_tmp___ns11__RemovePreset, "-ns11:RemovePreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__RemovePresetResponse*>(&ns11__RemovePresetResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__RemovePresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__RemovePresetResponse.soap_get(soap, "ns11:RemovePresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GotoPreset(const char *endpoint, const char *soap_action, _ns11__GotoPreset *ns11__GotoPreset, _ns11__GotoPresetResponse &ns11__GotoPresetResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GotoPreset soap_tmp___ns11__GotoPreset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset";
	soap_tmp___ns11__GotoPreset.ns11__GotoPreset = ns11__GotoPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GotoPreset(soap, &soap_tmp___ns11__GotoPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GotoPreset(soap, &soap_tmp___ns11__GotoPreset, "-ns11:GotoPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GotoPreset(soap, &soap_tmp___ns11__GotoPreset, "-ns11:GotoPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GotoPresetResponse*>(&ns11__GotoPresetResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GotoPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GotoPresetResponse.soap_get(soap, "ns11:GotoPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetStatus(const char *endpoint, const char *soap_action, _ns11__GetStatus *ns11__GetStatus, _ns11__GetStatusResponse &ns11__GetStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetStatus soap_tmp___ns11__GetStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetStatus";
	soap_tmp___ns11__GetStatus.ns11__GetStatus = ns11__GetStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetStatus(soap, &soap_tmp___ns11__GetStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetStatus(soap, &soap_tmp___ns11__GetStatus, "-ns11:GetStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetStatus(soap, &soap_tmp___ns11__GetStatus, "-ns11:GetStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetStatusResponse*>(&ns11__GetStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetStatusResponse.soap_get(soap, "ns11:GetStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetConfiguration(const char *endpoint, const char *soap_action, _ns11__GetConfiguration *ns11__GetConfiguration, _ns11__GetConfigurationResponse &ns11__GetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetConfiguration soap_tmp___ns11__GetConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration";
	soap_tmp___ns11__GetConfiguration.ns11__GetConfiguration = ns11__GetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetConfiguration(soap, &soap_tmp___ns11__GetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetConfiguration(soap, &soap_tmp___ns11__GetConfiguration, "-ns11:GetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetConfiguration(soap, &soap_tmp___ns11__GetConfiguration, "-ns11:GetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetConfigurationResponse*>(&ns11__GetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetConfigurationResponse.soap_get(soap, "ns11:GetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetNodes(const char *endpoint, const char *soap_action, _ns11__GetNodes *ns11__GetNodes, _ns11__GetNodesResponse &ns11__GetNodesResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetNodes soap_tmp___ns11__GetNodes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNodes";
	soap_tmp___ns11__GetNodes.ns11__GetNodes = ns11__GetNodes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetNodes(soap, &soap_tmp___ns11__GetNodes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetNodes(soap, &soap_tmp___ns11__GetNodes, "-ns11:GetNodes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetNodes(soap, &soap_tmp___ns11__GetNodes, "-ns11:GetNodes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetNodesResponse*>(&ns11__GetNodesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetNodesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetNodesResponse.soap_get(soap, "ns11:GetNodesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetNode(const char *endpoint, const char *soap_action, _ns11__GetNode *ns11__GetNode, _ns11__GetNodeResponse &ns11__GetNodeResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetNode soap_tmp___ns11__GetNode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNode";
	soap_tmp___ns11__GetNode.ns11__GetNode = ns11__GetNode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetNode(soap, &soap_tmp___ns11__GetNode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetNode(soap, &soap_tmp___ns11__GetNode, "-ns11:GetNode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetNode(soap, &soap_tmp___ns11__GetNode, "-ns11:GetNode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetNodeResponse*>(&ns11__GetNodeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetNodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetNodeResponse.soap_get(soap, "ns11:GetNodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::SetConfiguration(const char *endpoint, const char *soap_action, _ns11__SetConfiguration *ns11__SetConfiguration, _ns11__SetConfigurationResponse &ns11__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SetConfiguration soap_tmp___ns11__SetConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration";
	soap_tmp___ns11__SetConfiguration.ns11__SetConfiguration = ns11__SetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__SetConfiguration(soap, &soap_tmp___ns11__SetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetConfiguration(soap, &soap_tmp___ns11__SetConfiguration, "-ns11:SetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetConfiguration(soap, &soap_tmp___ns11__SetConfiguration, "-ns11:SetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__SetConfigurationResponse*>(&ns11__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetConfigurationResponse.soap_get(soap, "ns11:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetConfigurationOptions(const char *endpoint, const char *soap_action, _ns11__GetConfigurationOptions *ns11__GetConfigurationOptions, _ns11__GetConfigurationOptionsResponse &ns11__GetConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetConfigurationOptions soap_tmp___ns11__GetConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions";
	soap_tmp___ns11__GetConfigurationOptions.ns11__GetConfigurationOptions = ns11__GetConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetConfigurationOptions(soap, &soap_tmp___ns11__GetConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetConfigurationOptions(soap, &soap_tmp___ns11__GetConfigurationOptions, "-ns11:GetConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetConfigurationOptions(soap, &soap_tmp___ns11__GetConfigurationOptions, "-ns11:GetConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetConfigurationOptionsResponse*>(&ns11__GetConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetConfigurationOptionsResponse.soap_get(soap, "ns11:GetConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GotoHomePosition(const char *endpoint, const char *soap_action, _ns11__GotoHomePosition *ns11__GotoHomePosition, _ns11__GotoHomePositionResponse &ns11__GotoHomePositionResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GotoHomePosition soap_tmp___ns11__GotoHomePosition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition";
	soap_tmp___ns11__GotoHomePosition.ns11__GotoHomePosition = ns11__GotoHomePosition;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GotoHomePosition(soap, &soap_tmp___ns11__GotoHomePosition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GotoHomePosition(soap, &soap_tmp___ns11__GotoHomePosition, "-ns11:GotoHomePosition", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GotoHomePosition(soap, &soap_tmp___ns11__GotoHomePosition, "-ns11:GotoHomePosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GotoHomePositionResponse*>(&ns11__GotoHomePositionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GotoHomePositionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GotoHomePositionResponse.soap_get(soap, "ns11:GotoHomePositionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::SetHomePosition(const char *endpoint, const char *soap_action, _ns11__SetHomePosition *ns11__SetHomePosition, _ns11__SetHomePositionResponse &ns11__SetHomePositionResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SetHomePosition soap_tmp___ns11__SetHomePosition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition";
	soap_tmp___ns11__SetHomePosition.ns11__SetHomePosition = ns11__SetHomePosition;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__SetHomePosition(soap, &soap_tmp___ns11__SetHomePosition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetHomePosition(soap, &soap_tmp___ns11__SetHomePosition, "-ns11:SetHomePosition", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetHomePosition(soap, &soap_tmp___ns11__SetHomePosition, "-ns11:SetHomePosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__SetHomePositionResponse*>(&ns11__SetHomePositionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__SetHomePositionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetHomePositionResponse.soap_get(soap, "ns11:SetHomePositionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::ContinuousMove(const char *endpoint, const char *soap_action, _ns11__ContinuousMove *ns11__ContinuousMove, _ns11__ContinuousMoveResponse &ns11__ContinuousMoveResponse)
{	struct soap *soap = this->soap;
	struct __ns11__ContinuousMove soap_tmp___ns11__ContinuousMove;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove";
	soap_tmp___ns11__ContinuousMove.ns11__ContinuousMove = ns11__ContinuousMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__ContinuousMove(soap, &soap_tmp___ns11__ContinuousMove);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ContinuousMove(soap, &soap_tmp___ns11__ContinuousMove, "-ns11:ContinuousMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ContinuousMove(soap, &soap_tmp___ns11__ContinuousMove, "-ns11:ContinuousMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__ContinuousMoveResponse*>(&ns11__ContinuousMoveResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__ContinuousMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ContinuousMoveResponse.soap_get(soap, "ns11:ContinuousMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::RelativeMove(const char *endpoint, const char *soap_action, _ns11__RelativeMove *ns11__RelativeMove, _ns11__RelativeMoveResponse &ns11__RelativeMoveResponse)
{	struct soap *soap = this->soap;
	struct __ns11__RelativeMove soap_tmp___ns11__RelativeMove;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove";
	soap_tmp___ns11__RelativeMove.ns11__RelativeMove = ns11__RelativeMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__RelativeMove(soap, &soap_tmp___ns11__RelativeMove);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__RelativeMove(soap, &soap_tmp___ns11__RelativeMove, "-ns11:RelativeMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__RelativeMove(soap, &soap_tmp___ns11__RelativeMove, "-ns11:RelativeMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__RelativeMoveResponse*>(&ns11__RelativeMoveResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__RelativeMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__RelativeMoveResponse.soap_get(soap, "ns11:RelativeMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::SendAuxiliaryCommand(const char *endpoint, const char *soap_action, _ns11__SendAuxiliaryCommand *ns11__SendAuxiliaryCommand, _ns11__SendAuxiliaryCommandResponse &ns11__SendAuxiliaryCommandResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SendAuxiliaryCommand soap_tmp___ns11__SendAuxiliaryCommand;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand";
	soap_tmp___ns11__SendAuxiliaryCommand.ns11__SendAuxiliaryCommand = ns11__SendAuxiliaryCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__SendAuxiliaryCommand(soap, &soap_tmp___ns11__SendAuxiliaryCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SendAuxiliaryCommand(soap, &soap_tmp___ns11__SendAuxiliaryCommand, "-ns11:SendAuxiliaryCommand", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SendAuxiliaryCommand(soap, &soap_tmp___ns11__SendAuxiliaryCommand, "-ns11:SendAuxiliaryCommand", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__SendAuxiliaryCommandResponse*>(&ns11__SendAuxiliaryCommandResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__SendAuxiliaryCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SendAuxiliaryCommandResponse.soap_get(soap, "ns11:SendAuxiliaryCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::AbsoluteMove(const char *endpoint, const char *soap_action, _ns11__AbsoluteMove *ns11__AbsoluteMove, _ns11__AbsoluteMoveResponse &ns11__AbsoluteMoveResponse)
{	struct soap *soap = this->soap;
	struct __ns11__AbsoluteMove soap_tmp___ns11__AbsoluteMove;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove";
	soap_tmp___ns11__AbsoluteMove.ns11__AbsoluteMove = ns11__AbsoluteMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__AbsoluteMove(soap, &soap_tmp___ns11__AbsoluteMove);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__AbsoluteMove(soap, &soap_tmp___ns11__AbsoluteMove, "-ns11:AbsoluteMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__AbsoluteMove(soap, &soap_tmp___ns11__AbsoluteMove, "-ns11:AbsoluteMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__AbsoluteMoveResponse*>(&ns11__AbsoluteMoveResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__AbsoluteMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__AbsoluteMoveResponse.soap_get(soap, "ns11:AbsoluteMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::Stop(const char *endpoint, const char *soap_action, _ns11__Stop *ns11__Stop, _ns11__StopResponse &ns11__StopResponse)
{	struct soap *soap = this->soap;
	struct __ns11__Stop soap_tmp___ns11__Stop;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/Stop";
	soap_tmp___ns11__Stop.ns11__Stop = ns11__Stop;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__Stop(soap, &soap_tmp___ns11__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__Stop(soap, &soap_tmp___ns11__Stop, "-ns11:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__Stop(soap, &soap_tmp___ns11__Stop, "-ns11:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__StopResponse*>(&ns11__StopResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__StopResponse.soap_get(soap, "ns11:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTours(const char *endpoint, const char *soap_action, _ns11__GetPresetTours *ns11__GetPresetTours, _ns11__GetPresetToursResponse &ns11__GetPresetToursResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetPresetTours soap_tmp___ns11__GetPresetTours;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours";
	soap_tmp___ns11__GetPresetTours.ns11__GetPresetTours = ns11__GetPresetTours;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetPresetTours(soap, &soap_tmp___ns11__GetPresetTours);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetPresetTours(soap, &soap_tmp___ns11__GetPresetTours, "-ns11:GetPresetTours", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetPresetTours(soap, &soap_tmp___ns11__GetPresetTours, "-ns11:GetPresetTours", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetPresetToursResponse*>(&ns11__GetPresetToursResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetPresetToursResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetPresetToursResponse.soap_get(soap, "ns11:GetPresetToursResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTour(const char *endpoint, const char *soap_action, _ns11__GetPresetTour *ns11__GetPresetTour, _ns11__GetPresetTourResponse &ns11__GetPresetTourResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetPresetTour soap_tmp___ns11__GetPresetTour;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour";
	soap_tmp___ns11__GetPresetTour.ns11__GetPresetTour = ns11__GetPresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetPresetTour(soap, &soap_tmp___ns11__GetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetPresetTour(soap, &soap_tmp___ns11__GetPresetTour, "-ns11:GetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetPresetTour(soap, &soap_tmp___ns11__GetPresetTour, "-ns11:GetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetPresetTourResponse*>(&ns11__GetPresetTourResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetPresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetPresetTourResponse.soap_get(soap, "ns11:GetPresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTourOptions(const char *endpoint, const char *soap_action, _ns11__GetPresetTourOptions *ns11__GetPresetTourOptions, _ns11__GetPresetTourOptionsResponse &ns11__GetPresetTourOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetPresetTourOptions soap_tmp___ns11__GetPresetTourOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions";
	soap_tmp___ns11__GetPresetTourOptions.ns11__GetPresetTourOptions = ns11__GetPresetTourOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetPresetTourOptions(soap, &soap_tmp___ns11__GetPresetTourOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetPresetTourOptions(soap, &soap_tmp___ns11__GetPresetTourOptions, "-ns11:GetPresetTourOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetPresetTourOptions(soap, &soap_tmp___ns11__GetPresetTourOptions, "-ns11:GetPresetTourOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetPresetTourOptionsResponse*>(&ns11__GetPresetTourOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetPresetTourOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetPresetTourOptionsResponse.soap_get(soap, "ns11:GetPresetTourOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::CreatePresetTour(const char *endpoint, const char *soap_action, _ns11__CreatePresetTour *ns11__CreatePresetTour, _ns11__CreatePresetTourResponse &ns11__CreatePresetTourResponse)
{	struct soap *soap = this->soap;
	struct __ns11__CreatePresetTour soap_tmp___ns11__CreatePresetTour;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour";
	soap_tmp___ns11__CreatePresetTour.ns11__CreatePresetTour = ns11__CreatePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__CreatePresetTour(soap, &soap_tmp___ns11__CreatePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__CreatePresetTour(soap, &soap_tmp___ns11__CreatePresetTour, "-ns11:CreatePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__CreatePresetTour(soap, &soap_tmp___ns11__CreatePresetTour, "-ns11:CreatePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__CreatePresetTourResponse*>(&ns11__CreatePresetTourResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__CreatePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__CreatePresetTourResponse.soap_get(soap, "ns11:CreatePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::ModifyPresetTour(const char *endpoint, const char *soap_action, _ns11__ModifyPresetTour *ns11__ModifyPresetTour, _ns11__ModifyPresetTourResponse &ns11__ModifyPresetTourResponse)
{	struct soap *soap = this->soap;
	struct __ns11__ModifyPresetTour soap_tmp___ns11__ModifyPresetTour;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour";
	soap_tmp___ns11__ModifyPresetTour.ns11__ModifyPresetTour = ns11__ModifyPresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__ModifyPresetTour(soap, &soap_tmp___ns11__ModifyPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ModifyPresetTour(soap, &soap_tmp___ns11__ModifyPresetTour, "-ns11:ModifyPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ModifyPresetTour(soap, &soap_tmp___ns11__ModifyPresetTour, "-ns11:ModifyPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__ModifyPresetTourResponse*>(&ns11__ModifyPresetTourResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__ModifyPresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ModifyPresetTourResponse.soap_get(soap, "ns11:ModifyPresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::OperatePresetTour(const char *endpoint, const char *soap_action, _ns11__OperatePresetTour *ns11__OperatePresetTour, _ns11__OperatePresetTourResponse &ns11__OperatePresetTourResponse)
{	struct soap *soap = this->soap;
	struct __ns11__OperatePresetTour soap_tmp___ns11__OperatePresetTour;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour";
	soap_tmp___ns11__OperatePresetTour.ns11__OperatePresetTour = ns11__OperatePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__OperatePresetTour(soap, &soap_tmp___ns11__OperatePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__OperatePresetTour(soap, &soap_tmp___ns11__OperatePresetTour, "-ns11:OperatePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__OperatePresetTour(soap, &soap_tmp___ns11__OperatePresetTour, "-ns11:OperatePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__OperatePresetTourResponse*>(&ns11__OperatePresetTourResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__OperatePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__OperatePresetTourResponse.soap_get(soap, "ns11:OperatePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::RemovePresetTour(const char *endpoint, const char *soap_action, _ns11__RemovePresetTour *ns11__RemovePresetTour, _ns11__RemovePresetTourResponse &ns11__RemovePresetTourResponse)
{	struct soap *soap = this->soap;
	struct __ns11__RemovePresetTour soap_tmp___ns11__RemovePresetTour;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour";
	soap_tmp___ns11__RemovePresetTour.ns11__RemovePresetTour = ns11__RemovePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__RemovePresetTour(soap, &soap_tmp___ns11__RemovePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__RemovePresetTour(soap, &soap_tmp___ns11__RemovePresetTour, "-ns11:RemovePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__RemovePresetTour(soap, &soap_tmp___ns11__RemovePresetTour, "-ns11:RemovePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__RemovePresetTourResponse*>(&ns11__RemovePresetTourResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__RemovePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__RemovePresetTourResponse.soap_get(soap, "ns11:RemovePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PTZBindingProxy::GetCompatibleConfigurations(const char *endpoint, const char *soap_action, _ns11__GetCompatibleConfigurations *ns11__GetCompatibleConfigurations, _ns11__GetCompatibleConfigurationsResponse &ns11__GetCompatibleConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetCompatibleConfigurations soap_tmp___ns11__GetCompatibleConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations";
	soap_tmp___ns11__GetCompatibleConfigurations.ns11__GetCompatibleConfigurations = ns11__GetCompatibleConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns11__GetCompatibleConfigurations(soap, &soap_tmp___ns11__GetCompatibleConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetCompatibleConfigurations(soap, &soap_tmp___ns11__GetCompatibleConfigurations, "-ns11:GetCompatibleConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetCompatibleConfigurations(soap, &soap_tmp___ns11__GetCompatibleConfigurations, "-ns11:GetCompatibleConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns11__GetCompatibleConfigurationsResponse*>(&ns11__GetCompatibleConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns11__GetCompatibleConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetCompatibleConfigurationsResponse.soap_get(soap, "ns11:GetCompatibleConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
