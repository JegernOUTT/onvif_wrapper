/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.40 for onvifgen/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(const Media2BindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
}

Media2BindingProxy::Media2BindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns13", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns14", "http://www.w3.org/2005/08/addressing", NULL, NULL},
        {"xmime", "http://www.w3.org/2005/05/xmlmime", NULL, NULL},
        {"ns4", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"ns3", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"ns5", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"ns6", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
Media2BindingProxy *Media2BindingProxy::copy()
{	Media2BindingProxy *dup = SOAP_NEW_COPY(Media2BindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

Media2BindingProxy& Media2BindingProxy::operator=(const Media2BindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void Media2BindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingProxy::soap_header(struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *Media2BindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int Media2BindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int Media2BindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int Media2BindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns10__GetServiceCapabilities *ns10__GetServiceCapabilities, _ns10__GetServiceCapabilitiesResponse2 &ns10__GetServiceCapabilitiesResponse2)
{	struct soap *soap = this->soap;
	struct __ns10__GetServiceCapabilities soap_tmp___ns10__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___ns10__GetServiceCapabilities.ns10__GetServiceCapabilities = ns10__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetServiceCapabilitiesResponse2*>(&ns10__GetServiceCapabilitiesResponse2)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetServiceCapabilitiesResponse2.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetServiceCapabilitiesResponse2.soap_get(soap, "ns10:GetServiceCapabilitiesResponse2", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _ns10__CreateProfile *ns10__CreateProfile, _ns10__CreateProfileResponse &ns10__CreateProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns10__CreateProfile soap_tmp___ns10__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___ns10__CreateProfile.ns10__CreateProfile = ns10__CreateProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__CreateProfile(soap, &soap_tmp___ns10__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__CreateProfile(soap, &soap_tmp___ns10__CreateProfile, "-ns10:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__CreateProfile(soap, &soap_tmp___ns10__CreateProfile, "-ns10:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__CreateProfileResponse*>(&ns10__CreateProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__CreateProfileResponse.soap_get(soap, "ns10:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _ns10__GetProfiles *ns10__GetProfiles, _ns10__GetProfilesResponse &ns10__GetProfilesResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetProfiles soap_tmp___ns10__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___ns10__GetProfiles.ns10__GetProfiles = ns10__GetProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetProfiles(soap, &soap_tmp___ns10__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetProfiles(soap, &soap_tmp___ns10__GetProfiles, "-ns10:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetProfiles(soap, &soap_tmp___ns10__GetProfiles, "-ns10:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetProfilesResponse*>(&ns10__GetProfilesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetProfilesResponse.soap_get(soap, "ns10:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::AddConfiguration(const char *endpoint, const char *soap_action, _ns10__AddConfiguration *ns10__AddConfiguration, _ns10__AddConfigurationResponse &ns10__AddConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__AddConfiguration soap_tmp___ns10__AddConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___ns10__AddConfiguration.ns10__AddConfiguration = ns10__AddConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__AddConfiguration(soap, &soap_tmp___ns10__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__AddConfiguration(soap, &soap_tmp___ns10__AddConfiguration, "-ns10:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__AddConfiguration(soap, &soap_tmp___ns10__AddConfiguration, "-ns10:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__AddConfigurationResponse*>(&ns10__AddConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__AddConfigurationResponse.soap_get(soap, "ns10:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::RemoveConfiguration(const char *endpoint, const char *soap_action, _ns10__RemoveConfiguration *ns10__RemoveConfiguration, _ns10__RemoveConfigurationResponse &ns10__RemoveConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__RemoveConfiguration soap_tmp___ns10__RemoveConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___ns10__RemoveConfiguration.ns10__RemoveConfiguration = ns10__RemoveConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__RemoveConfiguration(soap, &soap_tmp___ns10__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__RemoveConfiguration(soap, &soap_tmp___ns10__RemoveConfiguration, "-ns10:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__RemoveConfiguration(soap, &soap_tmp___ns10__RemoveConfiguration, "-ns10:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__RemoveConfigurationResponse*>(&ns10__RemoveConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__RemoveConfigurationResponse.soap_get(soap, "ns10:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _ns10__DeleteProfile *ns10__DeleteProfile, _ns10__DeleteProfileResponse &ns10__DeleteProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns10__DeleteProfile soap_tmp___ns10__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___ns10__DeleteProfile.ns10__DeleteProfile = ns10__DeleteProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__DeleteProfile(soap, &soap_tmp___ns10__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__DeleteProfile(soap, &soap_tmp___ns10__DeleteProfile, "-ns10:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__DeleteProfile(soap, &soap_tmp___ns10__DeleteProfile, "-ns10:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__DeleteProfileResponse*>(&ns10__DeleteProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__DeleteProfileResponse.soap_get(soap, "ns10:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetVideoSourceConfigurations, _ns10__GetVideoSourceConfigurationsResponse &ns10__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoSourceConfigurations soap_tmp___ns10__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___ns10__GetVideoSourceConfigurations.ns10__GetVideoSourceConfigurations = ns10__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoSourceConfigurations(soap, &soap_tmp___ns10__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoSourceConfigurations(soap, &soap_tmp___ns10__GetVideoSourceConfigurations, "-ns10:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoSourceConfigurations(soap, &soap_tmp___ns10__GetVideoSourceConfigurations, "-ns10:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoSourceConfigurationsResponse*>(&ns10__GetVideoSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoSourceConfigurationsResponse.soap_get(soap, "ns10:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetVideoEncoderConfigurations, _ns10__GetVideoEncoderConfigurationsResponse &ns10__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoEncoderConfigurations soap_tmp___ns10__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___ns10__GetVideoEncoderConfigurations.ns10__GetVideoEncoderConfigurations = ns10__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoEncoderConfigurations(soap, &soap_tmp___ns10__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoEncoderConfigurations(soap, &soap_tmp___ns10__GetVideoEncoderConfigurations, "-ns10:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoEncoderConfigurations(soap, &soap_tmp___ns10__GetVideoEncoderConfigurations, "-ns10:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoEncoderConfigurationsResponse*>(&ns10__GetVideoEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoEncoderConfigurationsResponse.soap_get(soap, "ns10:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioSourceConfigurations, _ns10__GetAudioSourceConfigurationsResponse &ns10__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioSourceConfigurations soap_tmp___ns10__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___ns10__GetAudioSourceConfigurations.ns10__GetAudioSourceConfigurations = ns10__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioSourceConfigurations(soap, &soap_tmp___ns10__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioSourceConfigurations(soap, &soap_tmp___ns10__GetAudioSourceConfigurations, "-ns10:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioSourceConfigurations(soap, &soap_tmp___ns10__GetAudioSourceConfigurations, "-ns10:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioSourceConfigurationsResponse*>(&ns10__GetAudioSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioSourceConfigurationsResponse.soap_get(soap, "ns10:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioEncoderConfigurations, _ns10__GetAudioEncoderConfigurationsResponse &ns10__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioEncoderConfigurations soap_tmp___ns10__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___ns10__GetAudioEncoderConfigurations.ns10__GetAudioEncoderConfigurations = ns10__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioEncoderConfigurations(soap, &soap_tmp___ns10__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioEncoderConfigurations(soap, &soap_tmp___ns10__GetAudioEncoderConfigurations, "-ns10:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioEncoderConfigurations(soap, &soap_tmp___ns10__GetAudioEncoderConfigurations, "-ns10:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioEncoderConfigurationsResponse*>(&ns10__GetAudioEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioEncoderConfigurationsResponse.soap_get(soap, "ns10:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAnalyticsConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAnalyticsConfigurations, _ns10__GetAnalyticsConfigurationsResponse &ns10__GetAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAnalyticsConfigurations soap_tmp___ns10__GetAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___ns10__GetAnalyticsConfigurations.ns10__GetAnalyticsConfigurations = ns10__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAnalyticsConfigurations(soap, &soap_tmp___ns10__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAnalyticsConfigurations(soap, &soap_tmp___ns10__GetAnalyticsConfigurations, "-ns10:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAnalyticsConfigurations(soap, &soap_tmp___ns10__GetAnalyticsConfigurations, "-ns10:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAnalyticsConfigurationsResponse*>(&ns10__GetAnalyticsConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAnalyticsConfigurationsResponse.soap_get(soap, "ns10:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetMetadataConfigurations, _ns10__GetMetadataConfigurationsResponse &ns10__GetMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetMetadataConfigurations soap_tmp___ns10__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___ns10__GetMetadataConfigurations.ns10__GetMetadataConfigurations = ns10__GetMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetMetadataConfigurations(soap, &soap_tmp___ns10__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetMetadataConfigurations(soap, &soap_tmp___ns10__GetMetadataConfigurations, "-ns10:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetMetadataConfigurations(soap, &soap_tmp___ns10__GetMetadataConfigurations, "-ns10:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetMetadataConfigurationsResponse*>(&ns10__GetMetadataConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetMetadataConfigurationsResponse.soap_get(soap, "ns10:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioOutputConfigurations, _ns10__GetAudioOutputConfigurationsResponse &ns10__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioOutputConfigurations soap_tmp___ns10__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___ns10__GetAudioOutputConfigurations.ns10__GetAudioOutputConfigurations = ns10__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioOutputConfigurations(soap, &soap_tmp___ns10__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioOutputConfigurations(soap, &soap_tmp___ns10__GetAudioOutputConfigurations, "-ns10:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioOutputConfigurations(soap, &soap_tmp___ns10__GetAudioOutputConfigurations, "-ns10:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioOutputConfigurationsResponse*>(&ns10__GetAudioOutputConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioOutputConfigurationsResponse.soap_get(soap, "ns10:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioDecoderConfigurations, _ns10__GetAudioDecoderConfigurationsResponse &ns10__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioDecoderConfigurations soap_tmp___ns10__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___ns10__GetAudioDecoderConfigurations.ns10__GetAudioDecoderConfigurations = ns10__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioDecoderConfigurations(soap, &soap_tmp___ns10__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioDecoderConfigurations(soap, &soap_tmp___ns10__GetAudioDecoderConfigurations, "-ns10:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioDecoderConfigurations(soap, &soap_tmp___ns10__GetAudioDecoderConfigurations, "-ns10:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioDecoderConfigurationsResponse*>(&ns10__GetAudioDecoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioDecoderConfigurationsResponse.soap_get(soap, "ns10:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _ns10__SetVideoSourceConfiguration *ns10__SetVideoSourceConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetVideoSourceConfiguration soap_tmp___ns10__SetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___ns10__SetVideoSourceConfiguration.ns10__SetVideoSourceConfiguration = ns10__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetVideoSourceConfiguration(soap, &soap_tmp___ns10__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetVideoSourceConfiguration(soap, &soap_tmp___ns10__SetVideoSourceConfiguration, "-ns10:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetVideoSourceConfiguration(soap, &soap_tmp___ns10__SetVideoSourceConfiguration, "-ns10:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _ns10__SetVideoEncoderConfiguration *ns10__SetVideoEncoderConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetVideoEncoderConfiguration soap_tmp___ns10__SetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___ns10__SetVideoEncoderConfiguration.ns10__SetVideoEncoderConfiguration = ns10__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetVideoEncoderConfiguration(soap, &soap_tmp___ns10__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetVideoEncoderConfiguration(soap, &soap_tmp___ns10__SetVideoEncoderConfiguration, "-ns10:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetVideoEncoderConfiguration(soap, &soap_tmp___ns10__SetVideoEncoderConfiguration, "-ns10:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _ns10__SetAudioSourceConfiguration *ns10__SetAudioSourceConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetAudioSourceConfiguration soap_tmp___ns10__SetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___ns10__SetAudioSourceConfiguration.ns10__SetAudioSourceConfiguration = ns10__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetAudioSourceConfiguration(soap, &soap_tmp___ns10__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetAudioSourceConfiguration(soap, &soap_tmp___ns10__SetAudioSourceConfiguration, "-ns10:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetAudioSourceConfiguration(soap, &soap_tmp___ns10__SetAudioSourceConfiguration, "-ns10:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _ns10__SetAudioEncoderConfiguration *ns10__SetAudioEncoderConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetAudioEncoderConfiguration soap_tmp___ns10__SetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___ns10__SetAudioEncoderConfiguration.ns10__SetAudioEncoderConfiguration = ns10__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetAudioEncoderConfiguration(soap, &soap_tmp___ns10__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetAudioEncoderConfiguration(soap, &soap_tmp___ns10__SetAudioEncoderConfiguration, "-ns10:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetAudioEncoderConfiguration(soap, &soap_tmp___ns10__SetAudioEncoderConfiguration, "-ns10:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _ns10__SetMetadataConfiguration *ns10__SetMetadataConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetMetadataConfiguration soap_tmp___ns10__SetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___ns10__SetMetadataConfiguration.ns10__SetMetadataConfiguration = ns10__SetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetMetadataConfiguration(soap, &soap_tmp___ns10__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetMetadataConfiguration(soap, &soap_tmp___ns10__SetMetadataConfiguration, "-ns10:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetMetadataConfiguration(soap, &soap_tmp___ns10__SetMetadataConfiguration, "-ns10:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _ns10__SetAudioOutputConfiguration *ns10__SetAudioOutputConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetAudioOutputConfiguration soap_tmp___ns10__SetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___ns10__SetAudioOutputConfiguration.ns10__SetAudioOutputConfiguration = ns10__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetAudioOutputConfiguration(soap, &soap_tmp___ns10__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetAudioOutputConfiguration(soap, &soap_tmp___ns10__SetAudioOutputConfiguration, "-ns10:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetAudioOutputConfiguration(soap, &soap_tmp___ns10__SetAudioOutputConfiguration, "-ns10:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _ns10__SetAudioDecoderConfiguration *ns10__SetAudioDecoderConfiguration, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetAudioDecoderConfiguration soap_tmp___ns10__SetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___ns10__SetAudioDecoderConfiguration.ns10__SetAudioDecoderConfiguration = ns10__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetAudioDecoderConfiguration(soap, &soap_tmp___ns10__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetAudioDecoderConfiguration(soap, &soap_tmp___ns10__SetAudioDecoderConfiguration, "-ns10:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetAudioDecoderConfiguration(soap, &soap_tmp___ns10__SetAudioDecoderConfiguration, "-ns10:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetVideoSourceConfigurationOptions, _ns10__GetVideoSourceConfigurationOptionsResponse &ns10__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoSourceConfigurationOptions soap_tmp___ns10__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___ns10__GetVideoSourceConfigurationOptions.ns10__GetVideoSourceConfigurationOptions = ns10__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns10__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns10__GetVideoSourceConfigurationOptions, "-ns10:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns10__GetVideoSourceConfigurationOptions, "-ns10:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoSourceConfigurationOptionsResponse*>(&ns10__GetVideoSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "ns10:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetVideoEncoderConfigurationOptions, _ns10__GetVideoEncoderConfigurationOptionsResponse &ns10__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoEncoderConfigurationOptions soap_tmp___ns10__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___ns10__GetVideoEncoderConfigurationOptions.ns10__GetVideoEncoderConfigurationOptions = ns10__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetVideoEncoderConfigurationOptions, "-ns10:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetVideoEncoderConfigurationOptions, "-ns10:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoEncoderConfigurationOptionsResponse*>(&ns10__GetVideoEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "ns10:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioSourceConfigurationOptions, _ns10__GetAudioSourceConfigurationOptionsResponse &ns10__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioSourceConfigurationOptions soap_tmp___ns10__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___ns10__GetAudioSourceConfigurationOptions.ns10__GetAudioSourceConfigurationOptions = ns10__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns10__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns10__GetAudioSourceConfigurationOptions, "-ns10:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns10__GetAudioSourceConfigurationOptions, "-ns10:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioSourceConfigurationOptionsResponse*>(&ns10__GetAudioSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "ns10:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioEncoderConfigurationOptions, _ns10__GetAudioEncoderConfigurationOptionsResponse &ns10__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioEncoderConfigurationOptions soap_tmp___ns10__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___ns10__GetAudioEncoderConfigurationOptions.ns10__GetAudioEncoderConfigurationOptions = ns10__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioEncoderConfigurationOptions, "-ns10:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioEncoderConfigurationOptions, "-ns10:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioEncoderConfigurationOptionsResponse*>(&ns10__GetAudioEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "ns10:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetMetadataConfigurationOptions, _ns10__GetMetadataConfigurationOptionsResponse &ns10__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetMetadataConfigurationOptions soap_tmp___ns10__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___ns10__GetMetadataConfigurationOptions.ns10__GetMetadataConfigurationOptions = ns10__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetMetadataConfigurationOptions(soap, &soap_tmp___ns10__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetMetadataConfigurationOptions(soap, &soap_tmp___ns10__GetMetadataConfigurationOptions, "-ns10:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetMetadataConfigurationOptions(soap, &soap_tmp___ns10__GetMetadataConfigurationOptions, "-ns10:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetMetadataConfigurationOptionsResponse*>(&ns10__GetMetadataConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetMetadataConfigurationOptionsResponse.soap_get(soap, "ns10:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioOutputConfigurationOptions, _ns10__GetAudioOutputConfigurationOptionsResponse &ns10__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioOutputConfigurationOptions soap_tmp___ns10__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___ns10__GetAudioOutputConfigurationOptions.ns10__GetAudioOutputConfigurationOptions = ns10__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns10__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns10__GetAudioOutputConfigurationOptions, "-ns10:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns10__GetAudioOutputConfigurationOptions, "-ns10:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioOutputConfigurationOptionsResponse*>(&ns10__GetAudioOutputConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "ns10:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, ns10__GetConfiguration *ns10__GetAudioDecoderConfigurationOptions, _ns10__GetAudioDecoderConfigurationOptionsResponse &ns10__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetAudioDecoderConfigurationOptions soap_tmp___ns10__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___ns10__GetAudioDecoderConfigurationOptions.ns10__GetAudioDecoderConfigurationOptions = ns10__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioDecoderConfigurationOptions, "-ns10:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns10__GetAudioDecoderConfigurationOptions, "-ns10:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetAudioDecoderConfigurationOptionsResponse*>(&ns10__GetAudioDecoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "ns10:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderInstances(const char *endpoint, const char *soap_action, _ns10__GetVideoEncoderInstances *ns10__GetVideoEncoderInstances, _ns10__GetVideoEncoderInstancesResponse &ns10__GetVideoEncoderInstancesResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoEncoderInstances soap_tmp___ns10__GetVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___ns10__GetVideoEncoderInstances.ns10__GetVideoEncoderInstances = ns10__GetVideoEncoderInstances;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoEncoderInstances(soap, &soap_tmp___ns10__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoEncoderInstances(soap, &soap_tmp___ns10__GetVideoEncoderInstances, "-ns10:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoEncoderInstances(soap, &soap_tmp___ns10__GetVideoEncoderInstances, "-ns10:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoEncoderInstancesResponse*>(&ns10__GetVideoEncoderInstancesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoEncoderInstancesResponse.soap_get(soap, "ns10:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _ns10__GetStreamUri *ns10__GetStreamUri, _ns10__GetStreamUriResponse &ns10__GetStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetStreamUri soap_tmp___ns10__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___ns10__GetStreamUri.ns10__GetStreamUri = ns10__GetStreamUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetStreamUri(soap, &soap_tmp___ns10__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetStreamUri(soap, &soap_tmp___ns10__GetStreamUri, "-ns10:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetStreamUri(soap, &soap_tmp___ns10__GetStreamUri, "-ns10:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetStreamUriResponse*>(&ns10__GetStreamUriResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetStreamUriResponse.soap_get(soap, "ns10:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, ns10__StartStopMulticastStreaming *ns10__StartMulticastStreaming, _ns10__StartStopMulticastStreamingResponse &ns10__StartStopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __ns10__StartMulticastStreaming soap_tmp___ns10__StartMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___ns10__StartMulticastStreaming.ns10__StartMulticastStreaming = ns10__StartMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__StartMulticastStreaming(soap, &soap_tmp___ns10__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__StartMulticastStreaming(soap, &soap_tmp___ns10__StartMulticastStreaming, "-ns10:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__StartMulticastStreaming(soap, &soap_tmp___ns10__StartMulticastStreaming, "-ns10:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__StartStopMulticastStreamingResponse*>(&ns10__StartStopMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__StartStopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__StartStopMulticastStreamingResponse.soap_get(soap, "ns10:StartStopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, ns10__StartStopMulticastStreaming *ns10__StopMulticastStreaming, _ns10__StartStopMulticastStreamingResponse &ns10__StartStopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __ns10__StopMulticastStreaming soap_tmp___ns10__StopMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___ns10__StopMulticastStreaming.ns10__StopMulticastStreaming = ns10__StopMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__StopMulticastStreaming(soap, &soap_tmp___ns10__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__StopMulticastStreaming(soap, &soap_tmp___ns10__StopMulticastStreaming, "-ns10:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__StopMulticastStreaming(soap, &soap_tmp___ns10__StopMulticastStreaming, "-ns10:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__StartStopMulticastStreamingResponse*>(&ns10__StartStopMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__StartStopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__StartStopMulticastStreamingResponse.soap_get(soap, "ns10:StartStopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _ns10__SetSynchronizationPoint *ns10__SetSynchronizationPoint, _ns10__SetSynchronizationPointResponse &ns10__SetSynchronizationPointResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetSynchronizationPoint soap_tmp___ns10__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___ns10__SetSynchronizationPoint.ns10__SetSynchronizationPoint = ns10__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetSynchronizationPoint(soap, &soap_tmp___ns10__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetSynchronizationPoint(soap, &soap_tmp___ns10__SetSynchronizationPoint, "-ns10:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetSynchronizationPoint(soap, &soap_tmp___ns10__SetSynchronizationPoint, "-ns10:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetSynchronizationPointResponse*>(&ns10__SetSynchronizationPointResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetSynchronizationPointResponse.soap_get(soap, "ns10:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _ns10__GetSnapshotUri *ns10__GetSnapshotUri, _ns10__GetSnapshotUriResponse &ns10__GetSnapshotUriResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetSnapshotUri soap_tmp___ns10__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___ns10__GetSnapshotUri.ns10__GetSnapshotUri = ns10__GetSnapshotUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetSnapshotUri(soap, &soap_tmp___ns10__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetSnapshotUri(soap, &soap_tmp___ns10__GetSnapshotUri, "-ns10:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetSnapshotUri(soap, &soap_tmp___ns10__GetSnapshotUri, "-ns10:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetSnapshotUriResponse*>(&ns10__GetSnapshotUriResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetSnapshotUriResponse.soap_get(soap, "ns10:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _ns10__GetVideoSourceModes *ns10__GetVideoSourceModes, _ns10__GetVideoSourceModesResponse &ns10__GetVideoSourceModesResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetVideoSourceModes soap_tmp___ns10__GetVideoSourceModes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___ns10__GetVideoSourceModes.ns10__GetVideoSourceModes = ns10__GetVideoSourceModes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetVideoSourceModes(soap, &soap_tmp___ns10__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetVideoSourceModes(soap, &soap_tmp___ns10__GetVideoSourceModes, "-ns10:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetVideoSourceModes(soap, &soap_tmp___ns10__GetVideoSourceModes, "-ns10:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetVideoSourceModesResponse*>(&ns10__GetVideoSourceModesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetVideoSourceModesResponse.soap_get(soap, "ns10:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _ns10__SetVideoSourceMode *ns10__SetVideoSourceMode, _ns10__SetVideoSourceModeResponse &ns10__SetVideoSourceModeResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetVideoSourceMode soap_tmp___ns10__SetVideoSourceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___ns10__SetVideoSourceMode.ns10__SetVideoSourceMode = ns10__SetVideoSourceMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetVideoSourceMode(soap, &soap_tmp___ns10__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetVideoSourceMode(soap, &soap_tmp___ns10__SetVideoSourceMode, "-ns10:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetVideoSourceMode(soap, &soap_tmp___ns10__SetVideoSourceMode, "-ns10:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetVideoSourceModeResponse*>(&ns10__SetVideoSourceModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetVideoSourceModeResponse.soap_get(soap, "ns10:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _ns10__GetOSDs *ns10__GetOSDs, _ns10__GetOSDsResponse &ns10__GetOSDsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetOSDs soap_tmp___ns10__GetOSDs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___ns10__GetOSDs.ns10__GetOSDs = ns10__GetOSDs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetOSDs(soap, &soap_tmp___ns10__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetOSDs(soap, &soap_tmp___ns10__GetOSDs, "-ns10:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetOSDs(soap, &soap_tmp___ns10__GetOSDs, "-ns10:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetOSDsResponse*>(&ns10__GetOSDsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetOSDsResponse.soap_get(soap, "ns10:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _ns10__GetOSDOptions *ns10__GetOSDOptions, _ns10__GetOSDOptionsResponse &ns10__GetOSDOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns10__GetOSDOptions soap_tmp___ns10__GetOSDOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___ns10__GetOSDOptions.ns10__GetOSDOptions = ns10__GetOSDOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__GetOSDOptions(soap, &soap_tmp___ns10__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetOSDOptions(soap, &soap_tmp___ns10__GetOSDOptions, "-ns10:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetOSDOptions(soap, &soap_tmp___ns10__GetOSDOptions, "-ns10:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__GetOSDOptionsResponse*>(&ns10__GetOSDOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetOSDOptionsResponse.soap_get(soap, "ns10:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetOSD(const char *endpoint, const char *soap_action, _ns10__SetOSD *ns10__SetOSD, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__SetOSD soap_tmp___ns10__SetOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___ns10__SetOSD.ns10__SetOSD = ns10__SetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__SetOSD(soap, &soap_tmp___ns10__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__SetOSD(soap, &soap_tmp___ns10__SetOSD, "-ns10:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__SetOSD(soap, &soap_tmp___ns10__SetOSD, "-ns10:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _ns10__CreateOSD *ns10__CreateOSD, _ns10__CreateOSDResponse &ns10__CreateOSDResponse)
{	struct soap *soap = this->soap;
	struct __ns10__CreateOSD soap_tmp___ns10__CreateOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___ns10__CreateOSD.ns10__CreateOSD = ns10__CreateOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__CreateOSD(soap, &soap_tmp___ns10__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__CreateOSD(soap, &soap_tmp___ns10__CreateOSD, "-ns10:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__CreateOSD(soap, &soap_tmp___ns10__CreateOSD, "-ns10:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__CreateOSDResponse*>(&ns10__CreateOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__CreateOSDResponse.soap_get(soap, "ns10:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _ns10__DeleteOSD *ns10__DeleteOSD, _ns10__SetConfigurationResponse &ns10__SetConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns10__DeleteOSD soap_tmp___ns10__DeleteOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___ns10__DeleteOSD.ns10__DeleteOSD = ns10__DeleteOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns10__DeleteOSD(soap, &soap_tmp___ns10__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__DeleteOSD(soap, &soap_tmp___ns10__DeleteOSD, "-ns10:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__DeleteOSD(soap, &soap_tmp___ns10__DeleteOSD, "-ns10:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns10__SetConfigurationResponse*>(&ns10__SetConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__SetConfigurationResponse.soap_get(soap, "ns10:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
