/* soapDeviceBindingProxy.cpp
   Generated by gSOAP 2.8.40 for onvifgen/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapDeviceBindingProxy.h"

DeviceBindingProxy::DeviceBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	DeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceBindingProxy::DeviceBindingProxy(const DeviceBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

DeviceBindingProxy::DeviceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	DeviceBindingProxy_init(_soap->imode, _soap->omode);
}

DeviceBindingProxy::DeviceBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	DeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

DeviceBindingProxy::DeviceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	DeviceBindingProxy_init(iomode, iomode);
}

DeviceBindingProxy::DeviceBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	DeviceBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

DeviceBindingProxy::DeviceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	DeviceBindingProxy_init(imode, omode);
}

DeviceBindingProxy::~DeviceBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void DeviceBindingProxy::DeviceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"ns13", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"ns14", "http://www.w3.org/2005/08/addressing", NULL, NULL},
        {"xmime", "http://www.w3.org/2005/05/xmlmime", NULL, NULL},
        {"ns4", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"ns2", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"ns3", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"ns5", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"ns6", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"ns1", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"ns10", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"ns11", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"ns12", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"ns7", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"ns8", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"ns9", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
DeviceBindingProxy *DeviceBindingProxy::copy()
{	DeviceBindingProxy *dup = SOAP_NEW_COPY(DeviceBindingProxy);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

DeviceBindingProxy& DeviceBindingProxy::operator=(const DeviceBindingProxy& rhs)
{	if (this->soap_own)
		soap_free(this->soap);
	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void DeviceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DeviceBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	DeviceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void DeviceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void DeviceBindingProxy::soap_header(struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *DeviceBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *DeviceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *DeviceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *DeviceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int DeviceBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DeviceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void DeviceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DeviceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int DeviceBindingProxy::GetServices(const char *endpoint, const char *soap_action, _ns1__GetServices *ns1__GetServices, _ns1__GetServicesResponse &ns1__GetServicesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetServices soap_tmp___ns1__GetServices;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetServices";
	soap_tmp___ns1__GetServices.ns1__GetServices = ns1__GetServices;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServices(soap, &soap_tmp___ns1__GetServices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServices(soap, &soap_tmp___ns1__GetServices, "-ns1:GetServices", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServices(soap, &soap_tmp___ns1__GetServices, "-ns1:GetServices", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetServicesResponse*>(&ns1__GetServicesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetServicesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServicesResponse.soap_get(soap, "ns1:GetServicesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities";
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetServiceCapabilitiesResponse*>(&ns1__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse.soap_get(soap, "ns1:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDeviceInformation(const char *endpoint, const char *soap_action, _ns1__GetDeviceInformation *ns1__GetDeviceInformation, _ns1__GetDeviceInformationResponse &ns1__GetDeviceInformationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDeviceInformation soap_tmp___ns1__GetDeviceInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation";
	soap_tmp___ns1__GetDeviceInformation.ns1__GetDeviceInformation = ns1__GetDeviceInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDeviceInformation(soap, &soap_tmp___ns1__GetDeviceInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDeviceInformation(soap, &soap_tmp___ns1__GetDeviceInformation, "-ns1:GetDeviceInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDeviceInformation(soap, &soap_tmp___ns1__GetDeviceInformation, "-ns1:GetDeviceInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDeviceInformationResponse*>(&ns1__GetDeviceInformationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDeviceInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDeviceInformationResponse.soap_get(soap, "ns1:GetDeviceInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetSystemDateAndTime(const char *endpoint, const char *soap_action, _ns1__SetSystemDateAndTime *ns1__SetSystemDateAndTime, _ns1__SetSystemDateAndTimeResponse &ns1__SetSystemDateAndTimeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetSystemDateAndTime soap_tmp___ns1__SetSystemDateAndTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime";
	soap_tmp___ns1__SetSystemDateAndTime.ns1__SetSystemDateAndTime = ns1__SetSystemDateAndTime;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSystemDateAndTime(soap, &soap_tmp___ns1__SetSystemDateAndTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSystemDateAndTime(soap, &soap_tmp___ns1__SetSystemDateAndTime, "-ns1:SetSystemDateAndTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSystemDateAndTime(soap, &soap_tmp___ns1__SetSystemDateAndTime, "-ns1:SetSystemDateAndTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetSystemDateAndTimeResponse*>(&ns1__SetSystemDateAndTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetSystemDateAndTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSystemDateAndTimeResponse.soap_get(soap, "ns1:SetSystemDateAndTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetSystemDateAndTime(const char *endpoint, const char *soap_action, _ns1__GetSystemDateAndTime *ns1__GetSystemDateAndTime, _ns1__GetSystemDateAndTimeResponse &ns1__GetSystemDateAndTimeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSystemDateAndTime soap_tmp___ns1__GetSystemDateAndTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime";
	soap_tmp___ns1__GetSystemDateAndTime.ns1__GetSystemDateAndTime = ns1__GetSystemDateAndTime;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemDateAndTime(soap, &soap_tmp___ns1__GetSystemDateAndTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemDateAndTime(soap, &soap_tmp___ns1__GetSystemDateAndTime, "-ns1:GetSystemDateAndTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemDateAndTime(soap, &soap_tmp___ns1__GetSystemDateAndTime, "-ns1:GetSystemDateAndTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetSystemDateAndTimeResponse*>(&ns1__GetSystemDateAndTimeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetSystemDateAndTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemDateAndTimeResponse.soap_get(soap, "ns1:GetSystemDateAndTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetSystemFactoryDefault(const char *endpoint, const char *soap_action, _ns1__SetSystemFactoryDefault *ns1__SetSystemFactoryDefault, _ns1__SetSystemFactoryDefaultResponse &ns1__SetSystemFactoryDefaultResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetSystemFactoryDefault soap_tmp___ns1__SetSystemFactoryDefault;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault";
	soap_tmp___ns1__SetSystemFactoryDefault.ns1__SetSystemFactoryDefault = ns1__SetSystemFactoryDefault;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSystemFactoryDefault(soap, &soap_tmp___ns1__SetSystemFactoryDefault);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSystemFactoryDefault(soap, &soap_tmp___ns1__SetSystemFactoryDefault, "-ns1:SetSystemFactoryDefault", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSystemFactoryDefault(soap, &soap_tmp___ns1__SetSystemFactoryDefault, "-ns1:SetSystemFactoryDefault", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetSystemFactoryDefaultResponse*>(&ns1__SetSystemFactoryDefaultResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetSystemFactoryDefaultResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSystemFactoryDefaultResponse.soap_get(soap, "ns1:SetSystemFactoryDefaultResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::UpgradeSystemFirmware(const char *endpoint, const char *soap_action, _ns1__UpgradeSystemFirmware *ns1__UpgradeSystemFirmware, _ns1__UpgradeSystemFirmwareResponse &ns1__UpgradeSystemFirmwareResponse)
{	struct soap *soap = this->soap;
	struct __ns1__UpgradeSystemFirmware soap_tmp___ns1__UpgradeSystemFirmware;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware";
	soap_tmp___ns1__UpgradeSystemFirmware.ns1__UpgradeSystemFirmware = ns1__UpgradeSystemFirmware;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpgradeSystemFirmware(soap, &soap_tmp___ns1__UpgradeSystemFirmware);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpgradeSystemFirmware(soap, &soap_tmp___ns1__UpgradeSystemFirmware, "-ns1:UpgradeSystemFirmware", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpgradeSystemFirmware(soap, &soap_tmp___ns1__UpgradeSystemFirmware, "-ns1:UpgradeSystemFirmware", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UpgradeSystemFirmwareResponse*>(&ns1__UpgradeSystemFirmwareResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UpgradeSystemFirmwareResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpgradeSystemFirmwareResponse.soap_get(soap, "ns1:UpgradeSystemFirmwareResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SystemReboot(const char *endpoint, const char *soap_action, _ns1__SystemReboot *ns1__SystemReboot, _ns1__SystemRebootResponse &ns1__SystemRebootResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SystemReboot soap_tmp___ns1__SystemReboot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SystemReboot";
	soap_tmp___ns1__SystemReboot.ns1__SystemReboot = ns1__SystemReboot;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SystemReboot(soap, &soap_tmp___ns1__SystemReboot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SystemReboot(soap, &soap_tmp___ns1__SystemReboot, "-ns1:SystemReboot", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SystemReboot(soap, &soap_tmp___ns1__SystemReboot, "-ns1:SystemReboot", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SystemRebootResponse*>(&ns1__SystemRebootResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SystemRebootResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SystemRebootResponse.soap_get(soap, "ns1:SystemRebootResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::RestoreSystem(const char *endpoint, const char *soap_action, _ns1__RestoreSystem *ns1__RestoreSystem, _ns1__RestoreSystemResponse &ns1__RestoreSystemResponse)
{	struct soap *soap = this->soap;
	struct __ns1__RestoreSystem soap_tmp___ns1__RestoreSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RestoreSystem";
	soap_tmp___ns1__RestoreSystem.ns1__RestoreSystem = ns1__RestoreSystem;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__RestoreSystem(soap, &soap_tmp___ns1__RestoreSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RestoreSystem(soap, &soap_tmp___ns1__RestoreSystem, "-ns1:RestoreSystem", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RestoreSystem(soap, &soap_tmp___ns1__RestoreSystem, "-ns1:RestoreSystem", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__RestoreSystemResponse*>(&ns1__RestoreSystemResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__RestoreSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RestoreSystemResponse.soap_get(soap, "ns1:RestoreSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetSystemBackup(const char *endpoint, const char *soap_action, _ns1__GetSystemBackup *ns1__GetSystemBackup, _ns1__GetSystemBackupResponse &ns1__GetSystemBackupResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSystemBackup soap_tmp___ns1__GetSystemBackup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup";
	soap_tmp___ns1__GetSystemBackup.ns1__GetSystemBackup = ns1__GetSystemBackup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemBackup(soap, &soap_tmp___ns1__GetSystemBackup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemBackup(soap, &soap_tmp___ns1__GetSystemBackup, "-ns1:GetSystemBackup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemBackup(soap, &soap_tmp___ns1__GetSystemBackup, "-ns1:GetSystemBackup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetSystemBackupResponse*>(&ns1__GetSystemBackupResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetSystemBackupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemBackupResponse.soap_get(soap, "ns1:GetSystemBackupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetSystemLog(const char *endpoint, const char *soap_action, _ns1__GetSystemLog *ns1__GetSystemLog, _ns1__GetSystemLogResponse &ns1__GetSystemLogResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSystemLog soap_tmp___ns1__GetSystemLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemLog";
	soap_tmp___ns1__GetSystemLog.ns1__GetSystemLog = ns1__GetSystemLog;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemLog(soap, &soap_tmp___ns1__GetSystemLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemLog(soap, &soap_tmp___ns1__GetSystemLog, "-ns1:GetSystemLog", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemLog(soap, &soap_tmp___ns1__GetSystemLog, "-ns1:GetSystemLog", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetSystemLogResponse*>(&ns1__GetSystemLogResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetSystemLogResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemLogResponse.soap_get(soap, "ns1:GetSystemLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetSystemSupportInformation(const char *endpoint, const char *soap_action, _ns1__GetSystemSupportInformation *ns1__GetSystemSupportInformation, _ns1__GetSystemSupportInformationResponse &ns1__GetSystemSupportInformationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSystemSupportInformation soap_tmp___ns1__GetSystemSupportInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation";
	soap_tmp___ns1__GetSystemSupportInformation.ns1__GetSystemSupportInformation = ns1__GetSystemSupportInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemSupportInformation(soap, &soap_tmp___ns1__GetSystemSupportInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemSupportInformation(soap, &soap_tmp___ns1__GetSystemSupportInformation, "-ns1:GetSystemSupportInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemSupportInformation(soap, &soap_tmp___ns1__GetSystemSupportInformation, "-ns1:GetSystemSupportInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetSystemSupportInformationResponse*>(&ns1__GetSystemSupportInformationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetSystemSupportInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemSupportInformationResponse.soap_get(soap, "ns1:GetSystemSupportInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetScopes(const char *endpoint, const char *soap_action, _ns1__GetScopes *ns1__GetScopes, _ns1__GetScopesResponse &ns1__GetScopesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetScopes soap_tmp___ns1__GetScopes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetScopes";
	soap_tmp___ns1__GetScopes.ns1__GetScopes = ns1__GetScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetScopes(soap, &soap_tmp___ns1__GetScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetScopes(soap, &soap_tmp___ns1__GetScopes, "-ns1:GetScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetScopes(soap, &soap_tmp___ns1__GetScopes, "-ns1:GetScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetScopesResponse*>(&ns1__GetScopesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetScopesResponse.soap_get(soap, "ns1:GetScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetScopes(const char *endpoint, const char *soap_action, _ns1__SetScopes *ns1__SetScopes, _ns1__SetScopesResponse &ns1__SetScopesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetScopes soap_tmp___ns1__SetScopes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetScopes";
	soap_tmp___ns1__SetScopes.ns1__SetScopes = ns1__SetScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetScopes(soap, &soap_tmp___ns1__SetScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetScopes(soap, &soap_tmp___ns1__SetScopes, "-ns1:SetScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetScopes(soap, &soap_tmp___ns1__SetScopes, "-ns1:SetScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetScopesResponse*>(&ns1__SetScopesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetScopesResponse.soap_get(soap, "ns1:SetScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::AddScopes(const char *endpoint, const char *soap_action, _ns1__AddScopes *ns1__AddScopes, _ns1__AddScopesResponse &ns1__AddScopesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AddScopes soap_tmp___ns1__AddScopes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/AddScopes";
	soap_tmp___ns1__AddScopes.ns1__AddScopes = ns1__AddScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddScopes(soap, &soap_tmp___ns1__AddScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddScopes(soap, &soap_tmp___ns1__AddScopes, "-ns1:AddScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddScopes(soap, &soap_tmp___ns1__AddScopes, "-ns1:AddScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__AddScopesResponse*>(&ns1__AddScopesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__AddScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddScopesResponse.soap_get(soap, "ns1:AddScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::RemoveScopes(const char *endpoint, const char *soap_action, _ns1__RemoveScopes *ns1__RemoveScopes, _ns1__RemoveScopesResponse &ns1__RemoveScopesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__RemoveScopes soap_tmp___ns1__RemoveScopes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RemoveScopes";
	soap_tmp___ns1__RemoveScopes.ns1__RemoveScopes = ns1__RemoveScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveScopes(soap, &soap_tmp___ns1__RemoveScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveScopes(soap, &soap_tmp___ns1__RemoveScopes, "-ns1:RemoveScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveScopes(soap, &soap_tmp___ns1__RemoveScopes, "-ns1:RemoveScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__RemoveScopesResponse*>(&ns1__RemoveScopesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__RemoveScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveScopesResponse.soap_get(soap, "ns1:RemoveScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDiscoveryMode(const char *endpoint, const char *soap_action, _ns1__GetDiscoveryMode *ns1__GetDiscoveryMode, _ns1__GetDiscoveryModeResponse &ns1__GetDiscoveryModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDiscoveryMode soap_tmp___ns1__GetDiscoveryMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode";
	soap_tmp___ns1__GetDiscoveryMode.ns1__GetDiscoveryMode = ns1__GetDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDiscoveryMode(soap, &soap_tmp___ns1__GetDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDiscoveryMode(soap, &soap_tmp___ns1__GetDiscoveryMode, "-ns1:GetDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDiscoveryMode(soap, &soap_tmp___ns1__GetDiscoveryMode, "-ns1:GetDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDiscoveryModeResponse*>(&ns1__GetDiscoveryModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDiscoveryModeResponse.soap_get(soap, "ns1:GetDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetDiscoveryMode(const char *endpoint, const char *soap_action, _ns1__SetDiscoveryMode *ns1__SetDiscoveryMode, _ns1__SetDiscoveryModeResponse &ns1__SetDiscoveryModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetDiscoveryMode soap_tmp___ns1__SetDiscoveryMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode";
	soap_tmp___ns1__SetDiscoveryMode.ns1__SetDiscoveryMode = ns1__SetDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDiscoveryMode(soap, &soap_tmp___ns1__SetDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDiscoveryMode(soap, &soap_tmp___ns1__SetDiscoveryMode, "-ns1:SetDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDiscoveryMode(soap, &soap_tmp___ns1__SetDiscoveryMode, "-ns1:SetDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDiscoveryModeResponse*>(&ns1__SetDiscoveryModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDiscoveryModeResponse.soap_get(soap, "ns1:SetDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetRemoteDiscoveryMode(const char *endpoint, const char *soap_action, _ns1__GetRemoteDiscoveryMode *ns1__GetRemoteDiscoveryMode, _ns1__GetRemoteDiscoveryModeResponse &ns1__GetRemoteDiscoveryModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetRemoteDiscoveryMode soap_tmp___ns1__GetRemoteDiscoveryMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode";
	soap_tmp___ns1__GetRemoteDiscoveryMode.ns1__GetRemoteDiscoveryMode = ns1__GetRemoteDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRemoteDiscoveryMode(soap, &soap_tmp___ns1__GetRemoteDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRemoteDiscoveryMode(soap, &soap_tmp___ns1__GetRemoteDiscoveryMode, "-ns1:GetRemoteDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRemoteDiscoveryMode(soap, &soap_tmp___ns1__GetRemoteDiscoveryMode, "-ns1:GetRemoteDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetRemoteDiscoveryModeResponse*>(&ns1__GetRemoteDiscoveryModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRemoteDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRemoteDiscoveryModeResponse.soap_get(soap, "ns1:GetRemoteDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetRemoteDiscoveryMode(const char *endpoint, const char *soap_action, _ns1__SetRemoteDiscoveryMode *ns1__SetRemoteDiscoveryMode, _ns1__SetRemoteDiscoveryModeResponse &ns1__SetRemoteDiscoveryModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetRemoteDiscoveryMode soap_tmp___ns1__SetRemoteDiscoveryMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode";
	soap_tmp___ns1__SetRemoteDiscoveryMode.ns1__SetRemoteDiscoveryMode = ns1__SetRemoteDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRemoteDiscoveryMode(soap, &soap_tmp___ns1__SetRemoteDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRemoteDiscoveryMode(soap, &soap_tmp___ns1__SetRemoteDiscoveryMode, "-ns1:SetRemoteDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRemoteDiscoveryMode(soap, &soap_tmp___ns1__SetRemoteDiscoveryMode, "-ns1:SetRemoteDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetRemoteDiscoveryModeResponse*>(&ns1__SetRemoteDiscoveryModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetRemoteDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRemoteDiscoveryModeResponse.soap_get(soap, "ns1:SetRemoteDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDPAddresses(const char *endpoint, const char *soap_action, _ns1__GetDPAddresses *ns1__GetDPAddresses, _ns1__GetDPAddressesResponse &ns1__GetDPAddressesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDPAddresses soap_tmp___ns1__GetDPAddresses;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses";
	soap_tmp___ns1__GetDPAddresses.ns1__GetDPAddresses = ns1__GetDPAddresses;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDPAddresses(soap, &soap_tmp___ns1__GetDPAddresses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDPAddresses(soap, &soap_tmp___ns1__GetDPAddresses, "-ns1:GetDPAddresses", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDPAddresses(soap, &soap_tmp___ns1__GetDPAddresses, "-ns1:GetDPAddresses", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDPAddressesResponse*>(&ns1__GetDPAddressesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDPAddressesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDPAddressesResponse.soap_get(soap, "ns1:GetDPAddressesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetEndpointReference(const char *endpoint, const char *soap_action, _ns1__GetEndpointReference *ns1__GetEndpointReference, _ns1__GetEndpointReferenceResponse &ns1__GetEndpointReferenceResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetEndpointReference soap_tmp___ns1__GetEndpointReference;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference";
	soap_tmp___ns1__GetEndpointReference.ns1__GetEndpointReference = ns1__GetEndpointReference;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEndpointReference(soap, &soap_tmp___ns1__GetEndpointReference);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEndpointReference(soap, &soap_tmp___ns1__GetEndpointReference, "-ns1:GetEndpointReference", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEndpointReference(soap, &soap_tmp___ns1__GetEndpointReference, "-ns1:GetEndpointReference", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetEndpointReferenceResponse*>(&ns1__GetEndpointReferenceResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetEndpointReferenceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetEndpointReferenceResponse.soap_get(soap, "ns1:GetEndpointReferenceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetRemoteUser(const char *endpoint, const char *soap_action, _ns1__GetRemoteUser *ns1__GetRemoteUser, _ns1__GetRemoteUserResponse &ns1__GetRemoteUserResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetRemoteUser soap_tmp___ns1__GetRemoteUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser";
	soap_tmp___ns1__GetRemoteUser.ns1__GetRemoteUser = ns1__GetRemoteUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRemoteUser(soap, &soap_tmp___ns1__GetRemoteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRemoteUser(soap, &soap_tmp___ns1__GetRemoteUser, "-ns1:GetRemoteUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRemoteUser(soap, &soap_tmp___ns1__GetRemoteUser, "-ns1:GetRemoteUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetRemoteUserResponse*>(&ns1__GetRemoteUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRemoteUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRemoteUserResponse.soap_get(soap, "ns1:GetRemoteUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetRemoteUser(const char *endpoint, const char *soap_action, _ns1__SetRemoteUser *ns1__SetRemoteUser, _ns1__SetRemoteUserResponse &ns1__SetRemoteUserResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetRemoteUser soap_tmp___ns1__SetRemoteUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser";
	soap_tmp___ns1__SetRemoteUser.ns1__SetRemoteUser = ns1__SetRemoteUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRemoteUser(soap, &soap_tmp___ns1__SetRemoteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRemoteUser(soap, &soap_tmp___ns1__SetRemoteUser, "-ns1:SetRemoteUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRemoteUser(soap, &soap_tmp___ns1__SetRemoteUser, "-ns1:SetRemoteUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetRemoteUserResponse*>(&ns1__SetRemoteUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetRemoteUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRemoteUserResponse.soap_get(soap, "ns1:SetRemoteUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetUsers(const char *endpoint, const char *soap_action, _ns1__GetUsers *ns1__GetUsers, _ns1__GetUsersResponse &ns1__GetUsersResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetUsers soap_tmp___ns1__GetUsers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetUsers";
	soap_tmp___ns1__GetUsers.ns1__GetUsers = ns1__GetUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUsers(soap, &soap_tmp___ns1__GetUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUsers(soap, &soap_tmp___ns1__GetUsers, "-ns1:GetUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUsers(soap, &soap_tmp___ns1__GetUsers, "-ns1:GetUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetUsersResponse*>(&ns1__GetUsersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetUsersResponse.soap_get(soap, "ns1:GetUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::CreateUsers(const char *endpoint, const char *soap_action, _ns1__CreateUsers *ns1__CreateUsers, _ns1__CreateUsersResponse &ns1__CreateUsersResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateUsers soap_tmp___ns1__CreateUsers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateUsers";
	soap_tmp___ns1__CreateUsers.ns1__CreateUsers = ns1__CreateUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateUsers(soap, &soap_tmp___ns1__CreateUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateUsers(soap, &soap_tmp___ns1__CreateUsers, "-ns1:CreateUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateUsers(soap, &soap_tmp___ns1__CreateUsers, "-ns1:CreateUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CreateUsersResponse*>(&ns1__CreateUsersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateUsersResponse.soap_get(soap, "ns1:CreateUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::DeleteUsers(const char *endpoint, const char *soap_action, _ns1__DeleteUsers *ns1__DeleteUsers, _ns1__DeleteUsersResponse &ns1__DeleteUsersResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteUsers soap_tmp___ns1__DeleteUsers;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteUsers";
	soap_tmp___ns1__DeleteUsers.ns1__DeleteUsers = ns1__DeleteUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteUsers(soap, &soap_tmp___ns1__DeleteUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteUsers(soap, &soap_tmp___ns1__DeleteUsers, "-ns1:DeleteUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteUsers(soap, &soap_tmp___ns1__DeleteUsers, "-ns1:DeleteUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DeleteUsersResponse*>(&ns1__DeleteUsersResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DeleteUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteUsersResponse.soap_get(soap, "ns1:DeleteUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetUser(const char *endpoint, const char *soap_action, _ns1__SetUser *ns1__SetUser, _ns1__SetUserResponse &ns1__SetUserResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetUser soap_tmp___ns1__SetUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetUser";
	soap_tmp___ns1__SetUser.ns1__SetUser = ns1__SetUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetUser(soap, &soap_tmp___ns1__SetUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetUser(soap, &soap_tmp___ns1__SetUser, "-ns1:SetUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetUser(soap, &soap_tmp___ns1__SetUser, "-ns1:SetUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetUserResponse*>(&ns1__SetUserResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetUserResponse.soap_get(soap, "ns1:SetUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetWsdlUrl(const char *endpoint, const char *soap_action, _ns1__GetWsdlUrl *ns1__GetWsdlUrl, _ns1__GetWsdlUrlResponse &ns1__GetWsdlUrlResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetWsdlUrl soap_tmp___ns1__GetWsdlUrl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl";
	soap_tmp___ns1__GetWsdlUrl.ns1__GetWsdlUrl = ns1__GetWsdlUrl;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetWsdlUrl(soap, &soap_tmp___ns1__GetWsdlUrl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetWsdlUrl(soap, &soap_tmp___ns1__GetWsdlUrl, "-ns1:GetWsdlUrl", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetWsdlUrl(soap, &soap_tmp___ns1__GetWsdlUrl, "-ns1:GetWsdlUrl", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetWsdlUrlResponse*>(&ns1__GetWsdlUrlResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetWsdlUrlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetWsdlUrlResponse.soap_get(soap, "ns1:GetWsdlUrlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetCapabilities(const char *endpoint, const char *soap_action, _ns1__GetCapabilities *ns1__GetCapabilities, _ns1__GetCapabilitiesResponse &ns1__GetCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCapabilities soap_tmp___ns1__GetCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCapabilities";
	soap_tmp___ns1__GetCapabilities.ns1__GetCapabilities = ns1__GetCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCapabilities(soap, &soap_tmp___ns1__GetCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCapabilities(soap, &soap_tmp___ns1__GetCapabilities, "-ns1:GetCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCapabilities(soap, &soap_tmp___ns1__GetCapabilities, "-ns1:GetCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCapabilitiesResponse*>(&ns1__GetCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCapabilitiesResponse.soap_get(soap, "ns1:GetCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetDPAddresses(const char *endpoint, const char *soap_action, _ns1__SetDPAddresses *ns1__SetDPAddresses, _ns1__SetDPAddressesResponse &ns1__SetDPAddressesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetDPAddresses soap_tmp___ns1__SetDPAddresses;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses";
	soap_tmp___ns1__SetDPAddresses.ns1__SetDPAddresses = ns1__SetDPAddresses;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDPAddresses(soap, &soap_tmp___ns1__SetDPAddresses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDPAddresses(soap, &soap_tmp___ns1__SetDPAddresses, "-ns1:SetDPAddresses", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDPAddresses(soap, &soap_tmp___ns1__SetDPAddresses, "-ns1:SetDPAddresses", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDPAddressesResponse*>(&ns1__SetDPAddressesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDPAddressesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDPAddressesResponse.soap_get(soap, "ns1:SetDPAddressesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetHostname(const char *endpoint, const char *soap_action, _ns1__GetHostname *ns1__GetHostname, _ns1__GetHostnameResponse &ns1__GetHostnameResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetHostname soap_tmp___ns1__GetHostname;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetHostname";
	soap_tmp___ns1__GetHostname.ns1__GetHostname = ns1__GetHostname;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetHostname(soap, &soap_tmp___ns1__GetHostname);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetHostname(soap, &soap_tmp___ns1__GetHostname, "-ns1:GetHostname", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetHostname(soap, &soap_tmp___ns1__GetHostname, "-ns1:GetHostname", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetHostnameResponse*>(&ns1__GetHostnameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetHostnameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetHostnameResponse.soap_get(soap, "ns1:GetHostnameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetHostname(const char *endpoint, const char *soap_action, _ns1__SetHostname *ns1__SetHostname, _ns1__SetHostnameResponse &ns1__SetHostnameResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetHostname soap_tmp___ns1__SetHostname;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetHostname";
	soap_tmp___ns1__SetHostname.ns1__SetHostname = ns1__SetHostname;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetHostname(soap, &soap_tmp___ns1__SetHostname);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetHostname(soap, &soap_tmp___ns1__SetHostname, "-ns1:SetHostname", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetHostname(soap, &soap_tmp___ns1__SetHostname, "-ns1:SetHostname", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetHostnameResponse*>(&ns1__SetHostnameResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetHostnameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetHostnameResponse.soap_get(soap, "ns1:SetHostnameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetHostnameFromDHCP(const char *endpoint, const char *soap_action, _ns1__SetHostnameFromDHCP *ns1__SetHostnameFromDHCP, _ns1__SetHostnameFromDHCPResponse &ns1__SetHostnameFromDHCPResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetHostnameFromDHCP soap_tmp___ns1__SetHostnameFromDHCP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP";
	soap_tmp___ns1__SetHostnameFromDHCP.ns1__SetHostnameFromDHCP = ns1__SetHostnameFromDHCP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetHostnameFromDHCP(soap, &soap_tmp___ns1__SetHostnameFromDHCP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetHostnameFromDHCP(soap, &soap_tmp___ns1__SetHostnameFromDHCP, "-ns1:SetHostnameFromDHCP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetHostnameFromDHCP(soap, &soap_tmp___ns1__SetHostnameFromDHCP, "-ns1:SetHostnameFromDHCP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetHostnameFromDHCPResponse*>(&ns1__SetHostnameFromDHCPResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetHostnameFromDHCPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetHostnameFromDHCPResponse.soap_get(soap, "ns1:SetHostnameFromDHCPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDNS(const char *endpoint, const char *soap_action, _ns1__GetDNS *ns1__GetDNS, _ns1__GetDNSResponse &ns1__GetDNSResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDNS soap_tmp___ns1__GetDNS;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDNS";
	soap_tmp___ns1__GetDNS.ns1__GetDNS = ns1__GetDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDNS(soap, &soap_tmp___ns1__GetDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDNS(soap, &soap_tmp___ns1__GetDNS, "-ns1:GetDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDNS(soap, &soap_tmp___ns1__GetDNS, "-ns1:GetDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDNSResponse*>(&ns1__GetDNSResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDNSResponse.soap_get(soap, "ns1:GetDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetDNS(const char *endpoint, const char *soap_action, _ns1__SetDNS *ns1__SetDNS, _ns1__SetDNSResponse &ns1__SetDNSResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetDNS soap_tmp___ns1__SetDNS;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDNS";
	soap_tmp___ns1__SetDNS.ns1__SetDNS = ns1__SetDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDNS(soap, &soap_tmp___ns1__SetDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDNS(soap, &soap_tmp___ns1__SetDNS, "-ns1:SetDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDNS(soap, &soap_tmp___ns1__SetDNS, "-ns1:SetDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDNSResponse*>(&ns1__SetDNSResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDNSResponse.soap_get(soap, "ns1:SetDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetNTP(const char *endpoint, const char *soap_action, _ns1__GetNTP *ns1__GetNTP, _ns1__GetNTPResponse &ns1__GetNTPResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNTP soap_tmp___ns1__GetNTP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNTP";
	soap_tmp___ns1__GetNTP.ns1__GetNTP = ns1__GetNTP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNTP(soap, &soap_tmp___ns1__GetNTP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNTP(soap, &soap_tmp___ns1__GetNTP, "-ns1:GetNTP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNTP(soap, &soap_tmp___ns1__GetNTP, "-ns1:GetNTP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetNTPResponse*>(&ns1__GetNTPResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetNTPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNTPResponse.soap_get(soap, "ns1:GetNTPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetNTP(const char *endpoint, const char *soap_action, _ns1__SetNTP *ns1__SetNTP, _ns1__SetNTPResponse &ns1__SetNTPResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetNTP soap_tmp___ns1__SetNTP;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNTP";
	soap_tmp___ns1__SetNTP.ns1__SetNTP = ns1__SetNTP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetNTP(soap, &soap_tmp___ns1__SetNTP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetNTP(soap, &soap_tmp___ns1__SetNTP, "-ns1:SetNTP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetNTP(soap, &soap_tmp___ns1__SetNTP, "-ns1:SetNTP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetNTPResponse*>(&ns1__SetNTPResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetNTPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNTPResponse.soap_get(soap, "ns1:SetNTPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDynamicDNS(const char *endpoint, const char *soap_action, _ns1__GetDynamicDNS *ns1__GetDynamicDNS, _ns1__GetDynamicDNSResponse &ns1__GetDynamicDNSResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDynamicDNS soap_tmp___ns1__GetDynamicDNS;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS";
	soap_tmp___ns1__GetDynamicDNS.ns1__GetDynamicDNS = ns1__GetDynamicDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDynamicDNS(soap, &soap_tmp___ns1__GetDynamicDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDynamicDNS(soap, &soap_tmp___ns1__GetDynamicDNS, "-ns1:GetDynamicDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDynamicDNS(soap, &soap_tmp___ns1__GetDynamicDNS, "-ns1:GetDynamicDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDynamicDNSResponse*>(&ns1__GetDynamicDNSResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDynamicDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDynamicDNSResponse.soap_get(soap, "ns1:GetDynamicDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetDynamicDNS(const char *endpoint, const char *soap_action, _ns1__SetDynamicDNS *ns1__SetDynamicDNS, _ns1__SetDynamicDNSResponse &ns1__SetDynamicDNSResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetDynamicDNS soap_tmp___ns1__SetDynamicDNS;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS";
	soap_tmp___ns1__SetDynamicDNS.ns1__SetDynamicDNS = ns1__SetDynamicDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDynamicDNS(soap, &soap_tmp___ns1__SetDynamicDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDynamicDNS(soap, &soap_tmp___ns1__SetDynamicDNS, "-ns1:SetDynamicDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDynamicDNS(soap, &soap_tmp___ns1__SetDynamicDNS, "-ns1:SetDynamicDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDynamicDNSResponse*>(&ns1__SetDynamicDNSResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDynamicDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDynamicDNSResponse.soap_get(soap, "ns1:SetDynamicDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetNetworkInterfaces(const char *endpoint, const char *soap_action, _ns1__GetNetworkInterfaces *ns1__GetNetworkInterfaces, _ns1__GetNetworkInterfacesResponse &ns1__GetNetworkInterfacesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNetworkInterfaces soap_tmp___ns1__GetNetworkInterfaces;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces";
	soap_tmp___ns1__GetNetworkInterfaces.ns1__GetNetworkInterfaces = ns1__GetNetworkInterfaces;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNetworkInterfaces(soap, &soap_tmp___ns1__GetNetworkInterfaces);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNetworkInterfaces(soap, &soap_tmp___ns1__GetNetworkInterfaces, "-ns1:GetNetworkInterfaces", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNetworkInterfaces(soap, &soap_tmp___ns1__GetNetworkInterfaces, "-ns1:GetNetworkInterfaces", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetNetworkInterfacesResponse*>(&ns1__GetNetworkInterfacesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetNetworkInterfacesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNetworkInterfacesResponse.soap_get(soap, "ns1:GetNetworkInterfacesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetNetworkInterfaces(const char *endpoint, const char *soap_action, _ns1__SetNetworkInterfaces *ns1__SetNetworkInterfaces, _ns1__SetNetworkInterfacesResponse &ns1__SetNetworkInterfacesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetNetworkInterfaces soap_tmp___ns1__SetNetworkInterfaces;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces";
	soap_tmp___ns1__SetNetworkInterfaces.ns1__SetNetworkInterfaces = ns1__SetNetworkInterfaces;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetNetworkInterfaces(soap, &soap_tmp___ns1__SetNetworkInterfaces);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetNetworkInterfaces(soap, &soap_tmp___ns1__SetNetworkInterfaces, "-ns1:SetNetworkInterfaces", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetNetworkInterfaces(soap, &soap_tmp___ns1__SetNetworkInterfaces, "-ns1:SetNetworkInterfaces", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetNetworkInterfacesResponse*>(&ns1__SetNetworkInterfacesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetNetworkInterfacesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNetworkInterfacesResponse.soap_get(soap, "ns1:SetNetworkInterfacesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetNetworkProtocols(const char *endpoint, const char *soap_action, _ns1__GetNetworkProtocols *ns1__GetNetworkProtocols, _ns1__GetNetworkProtocolsResponse &ns1__GetNetworkProtocolsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNetworkProtocols soap_tmp___ns1__GetNetworkProtocols;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols";
	soap_tmp___ns1__GetNetworkProtocols.ns1__GetNetworkProtocols = ns1__GetNetworkProtocols;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNetworkProtocols(soap, &soap_tmp___ns1__GetNetworkProtocols);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNetworkProtocols(soap, &soap_tmp___ns1__GetNetworkProtocols, "-ns1:GetNetworkProtocols", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNetworkProtocols(soap, &soap_tmp___ns1__GetNetworkProtocols, "-ns1:GetNetworkProtocols", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetNetworkProtocolsResponse*>(&ns1__GetNetworkProtocolsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetNetworkProtocolsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNetworkProtocolsResponse.soap_get(soap, "ns1:GetNetworkProtocolsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetNetworkProtocols(const char *endpoint, const char *soap_action, _ns1__SetNetworkProtocols *ns1__SetNetworkProtocols, _ns1__SetNetworkProtocolsResponse &ns1__SetNetworkProtocolsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetNetworkProtocols soap_tmp___ns1__SetNetworkProtocols;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols";
	soap_tmp___ns1__SetNetworkProtocols.ns1__SetNetworkProtocols = ns1__SetNetworkProtocols;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetNetworkProtocols(soap, &soap_tmp___ns1__SetNetworkProtocols);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetNetworkProtocols(soap, &soap_tmp___ns1__SetNetworkProtocols, "-ns1:SetNetworkProtocols", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetNetworkProtocols(soap, &soap_tmp___ns1__SetNetworkProtocols, "-ns1:SetNetworkProtocols", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetNetworkProtocolsResponse*>(&ns1__SetNetworkProtocolsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetNetworkProtocolsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNetworkProtocolsResponse.soap_get(soap, "ns1:SetNetworkProtocolsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetNetworkDefaultGateway(const char *endpoint, const char *soap_action, _ns1__GetNetworkDefaultGateway *ns1__GetNetworkDefaultGateway, _ns1__GetNetworkDefaultGatewayResponse &ns1__GetNetworkDefaultGatewayResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetNetworkDefaultGateway soap_tmp___ns1__GetNetworkDefaultGateway;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway";
	soap_tmp___ns1__GetNetworkDefaultGateway.ns1__GetNetworkDefaultGateway = ns1__GetNetworkDefaultGateway;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetNetworkDefaultGateway(soap, &soap_tmp___ns1__GetNetworkDefaultGateway);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetNetworkDefaultGateway(soap, &soap_tmp___ns1__GetNetworkDefaultGateway, "-ns1:GetNetworkDefaultGateway", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetNetworkDefaultGateway(soap, &soap_tmp___ns1__GetNetworkDefaultGateway, "-ns1:GetNetworkDefaultGateway", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetNetworkDefaultGatewayResponse*>(&ns1__GetNetworkDefaultGatewayResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetNetworkDefaultGatewayResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetNetworkDefaultGatewayResponse.soap_get(soap, "ns1:GetNetworkDefaultGatewayResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetNetworkDefaultGateway(const char *endpoint, const char *soap_action, _ns1__SetNetworkDefaultGateway *ns1__SetNetworkDefaultGateway, _ns1__SetNetworkDefaultGatewayResponse &ns1__SetNetworkDefaultGatewayResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetNetworkDefaultGateway soap_tmp___ns1__SetNetworkDefaultGateway;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway";
	soap_tmp___ns1__SetNetworkDefaultGateway.ns1__SetNetworkDefaultGateway = ns1__SetNetworkDefaultGateway;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetNetworkDefaultGateway(soap, &soap_tmp___ns1__SetNetworkDefaultGateway);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetNetworkDefaultGateway(soap, &soap_tmp___ns1__SetNetworkDefaultGateway, "-ns1:SetNetworkDefaultGateway", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetNetworkDefaultGateway(soap, &soap_tmp___ns1__SetNetworkDefaultGateway, "-ns1:SetNetworkDefaultGateway", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetNetworkDefaultGatewayResponse*>(&ns1__SetNetworkDefaultGatewayResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetNetworkDefaultGatewayResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetNetworkDefaultGatewayResponse.soap_get(soap, "ns1:SetNetworkDefaultGatewayResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetZeroConfiguration(const char *endpoint, const char *soap_action, _ns1__GetZeroConfiguration *ns1__GetZeroConfiguration, _ns1__GetZeroConfigurationResponse &ns1__GetZeroConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetZeroConfiguration soap_tmp___ns1__GetZeroConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration";
	soap_tmp___ns1__GetZeroConfiguration.ns1__GetZeroConfiguration = ns1__GetZeroConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetZeroConfiguration(soap, &soap_tmp___ns1__GetZeroConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetZeroConfiguration(soap, &soap_tmp___ns1__GetZeroConfiguration, "-ns1:GetZeroConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetZeroConfiguration(soap, &soap_tmp___ns1__GetZeroConfiguration, "-ns1:GetZeroConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetZeroConfigurationResponse*>(&ns1__GetZeroConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetZeroConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetZeroConfigurationResponse.soap_get(soap, "ns1:GetZeroConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetZeroConfiguration(const char *endpoint, const char *soap_action, _ns1__SetZeroConfiguration *ns1__SetZeroConfiguration, _ns1__SetZeroConfigurationResponse &ns1__SetZeroConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetZeroConfiguration soap_tmp___ns1__SetZeroConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration";
	soap_tmp___ns1__SetZeroConfiguration.ns1__SetZeroConfiguration = ns1__SetZeroConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetZeroConfiguration(soap, &soap_tmp___ns1__SetZeroConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetZeroConfiguration(soap, &soap_tmp___ns1__SetZeroConfiguration, "-ns1:SetZeroConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetZeroConfiguration(soap, &soap_tmp___ns1__SetZeroConfiguration, "-ns1:SetZeroConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetZeroConfigurationResponse*>(&ns1__SetZeroConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetZeroConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetZeroConfigurationResponse.soap_get(soap, "ns1:SetZeroConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetIPAddressFilter(const char *endpoint, const char *soap_action, _ns1__GetIPAddressFilter *ns1__GetIPAddressFilter, _ns1__GetIPAddressFilterResponse &ns1__GetIPAddressFilterResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetIPAddressFilter soap_tmp___ns1__GetIPAddressFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter";
	soap_tmp___ns1__GetIPAddressFilter.ns1__GetIPAddressFilter = ns1__GetIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetIPAddressFilter(soap, &soap_tmp___ns1__GetIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetIPAddressFilter(soap, &soap_tmp___ns1__GetIPAddressFilter, "-ns1:GetIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetIPAddressFilter(soap, &soap_tmp___ns1__GetIPAddressFilter, "-ns1:GetIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetIPAddressFilterResponse*>(&ns1__GetIPAddressFilterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetIPAddressFilterResponse.soap_get(soap, "ns1:GetIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetIPAddressFilter(const char *endpoint, const char *soap_action, _ns1__SetIPAddressFilter *ns1__SetIPAddressFilter, _ns1__SetIPAddressFilterResponse &ns1__SetIPAddressFilterResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetIPAddressFilter soap_tmp___ns1__SetIPAddressFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter";
	soap_tmp___ns1__SetIPAddressFilter.ns1__SetIPAddressFilter = ns1__SetIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetIPAddressFilter(soap, &soap_tmp___ns1__SetIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetIPAddressFilter(soap, &soap_tmp___ns1__SetIPAddressFilter, "-ns1:SetIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetIPAddressFilter(soap, &soap_tmp___ns1__SetIPAddressFilter, "-ns1:SetIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetIPAddressFilterResponse*>(&ns1__SetIPAddressFilterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetIPAddressFilterResponse.soap_get(soap, "ns1:SetIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::AddIPAddressFilter(const char *endpoint, const char *soap_action, _ns1__AddIPAddressFilter *ns1__AddIPAddressFilter, _ns1__AddIPAddressFilterResponse &ns1__AddIPAddressFilterResponse)
{	struct soap *soap = this->soap;
	struct __ns1__AddIPAddressFilter soap_tmp___ns1__AddIPAddressFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter";
	soap_tmp___ns1__AddIPAddressFilter.ns1__AddIPAddressFilter = ns1__AddIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddIPAddressFilter(soap, &soap_tmp___ns1__AddIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddIPAddressFilter(soap, &soap_tmp___ns1__AddIPAddressFilter, "-ns1:AddIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddIPAddressFilter(soap, &soap_tmp___ns1__AddIPAddressFilter, "-ns1:AddIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__AddIPAddressFilterResponse*>(&ns1__AddIPAddressFilterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__AddIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddIPAddressFilterResponse.soap_get(soap, "ns1:AddIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::RemoveIPAddressFilter(const char *endpoint, const char *soap_action, _ns1__RemoveIPAddressFilter *ns1__RemoveIPAddressFilter, _ns1__RemoveIPAddressFilterResponse &ns1__RemoveIPAddressFilterResponse)
{	struct soap *soap = this->soap;
	struct __ns1__RemoveIPAddressFilter soap_tmp___ns1__RemoveIPAddressFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter";
	soap_tmp___ns1__RemoveIPAddressFilter.ns1__RemoveIPAddressFilter = ns1__RemoveIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveIPAddressFilter(soap, &soap_tmp___ns1__RemoveIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveIPAddressFilter(soap, &soap_tmp___ns1__RemoveIPAddressFilter, "-ns1:RemoveIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveIPAddressFilter(soap, &soap_tmp___ns1__RemoveIPAddressFilter, "-ns1:RemoveIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__RemoveIPAddressFilterResponse*>(&ns1__RemoveIPAddressFilterResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__RemoveIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveIPAddressFilterResponse.soap_get(soap, "ns1:RemoveIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetAccessPolicy(const char *endpoint, const char *soap_action, _ns1__GetAccessPolicy *ns1__GetAccessPolicy, _ns1__GetAccessPolicyResponse &ns1__GetAccessPolicyResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPolicy soap_tmp___ns1__GetAccessPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy";
	soap_tmp___ns1__GetAccessPolicy.ns1__GetAccessPolicy = ns1__GetAccessPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPolicy(soap, &soap_tmp___ns1__GetAccessPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPolicy(soap, &soap_tmp___ns1__GetAccessPolicy, "-ns1:GetAccessPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPolicy(soap, &soap_tmp___ns1__GetAccessPolicy, "-ns1:GetAccessPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetAccessPolicyResponse*>(&ns1__GetAccessPolicyResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetAccessPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPolicyResponse.soap_get(soap, "ns1:GetAccessPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetAccessPolicy(const char *endpoint, const char *soap_action, _ns1__SetAccessPolicy *ns1__SetAccessPolicy, _ns1__SetAccessPolicyResponse &ns1__SetAccessPolicyResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetAccessPolicy soap_tmp___ns1__SetAccessPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy";
	soap_tmp___ns1__SetAccessPolicy.ns1__SetAccessPolicy = ns1__SetAccessPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPolicy(soap, &soap_tmp___ns1__SetAccessPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPolicy(soap, &soap_tmp___ns1__SetAccessPolicy, "-ns1:SetAccessPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPolicy(soap, &soap_tmp___ns1__SetAccessPolicy, "-ns1:SetAccessPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetAccessPolicyResponse*>(&ns1__SetAccessPolicyResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetAccessPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPolicyResponse.soap_get(soap, "ns1:SetAccessPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::CreateCertificate(const char *endpoint, const char *soap_action, _ns1__CreateCertificate *ns1__CreateCertificate, _ns1__CreateCertificateResponse &ns1__CreateCertificateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateCertificate soap_tmp___ns1__CreateCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateCertificate";
	soap_tmp___ns1__CreateCertificate.ns1__CreateCertificate = ns1__CreateCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateCertificate(soap, &soap_tmp___ns1__CreateCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateCertificate(soap, &soap_tmp___ns1__CreateCertificate, "-ns1:CreateCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateCertificate(soap, &soap_tmp___ns1__CreateCertificate, "-ns1:CreateCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CreateCertificateResponse*>(&ns1__CreateCertificateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateCertificateResponse.soap_get(soap, "ns1:CreateCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetCertificates(const char *endpoint, const char *soap_action, _ns1__GetCertificates *ns1__GetCertificates, _ns1__GetCertificatesResponse &ns1__GetCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCertificates soap_tmp___ns1__GetCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificates";
	soap_tmp___ns1__GetCertificates.ns1__GetCertificates = ns1__GetCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificates(soap, &soap_tmp___ns1__GetCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificates(soap, &soap_tmp___ns1__GetCertificates, "-ns1:GetCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificates(soap, &soap_tmp___ns1__GetCertificates, "-ns1:GetCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCertificatesResponse*>(&ns1__GetCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificatesResponse.soap_get(soap, "ns1:GetCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetCertificatesStatus(const char *endpoint, const char *soap_action, _ns1__GetCertificatesStatus *ns1__GetCertificatesStatus, _ns1__GetCertificatesStatusResponse &ns1__GetCertificatesStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCertificatesStatus soap_tmp___ns1__GetCertificatesStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus";
	soap_tmp___ns1__GetCertificatesStatus.ns1__GetCertificatesStatus = ns1__GetCertificatesStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificatesStatus(soap, &soap_tmp___ns1__GetCertificatesStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificatesStatus(soap, &soap_tmp___ns1__GetCertificatesStatus, "-ns1:GetCertificatesStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificatesStatus(soap, &soap_tmp___ns1__GetCertificatesStatus, "-ns1:GetCertificatesStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCertificatesStatusResponse*>(&ns1__GetCertificatesStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCertificatesStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificatesStatusResponse.soap_get(soap, "ns1:GetCertificatesStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetCertificatesStatus(const char *endpoint, const char *soap_action, _ns1__SetCertificatesStatus *ns1__SetCertificatesStatus, _ns1__SetCertificatesStatusResponse &ns1__SetCertificatesStatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetCertificatesStatus soap_tmp___ns1__SetCertificatesStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus";
	soap_tmp___ns1__SetCertificatesStatus.ns1__SetCertificatesStatus = ns1__SetCertificatesStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetCertificatesStatus(soap, &soap_tmp___ns1__SetCertificatesStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetCertificatesStatus(soap, &soap_tmp___ns1__SetCertificatesStatus, "-ns1:SetCertificatesStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetCertificatesStatus(soap, &soap_tmp___ns1__SetCertificatesStatus, "-ns1:SetCertificatesStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetCertificatesStatusResponse*>(&ns1__SetCertificatesStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetCertificatesStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetCertificatesStatusResponse.soap_get(soap, "ns1:SetCertificatesStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::DeleteCertificates(const char *endpoint, const char *soap_action, _ns1__DeleteCertificates *ns1__DeleteCertificates, _ns1__DeleteCertificatesResponse &ns1__DeleteCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteCertificates soap_tmp___ns1__DeleteCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates";
	soap_tmp___ns1__DeleteCertificates.ns1__DeleteCertificates = ns1__DeleteCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteCertificates(soap, &soap_tmp___ns1__DeleteCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteCertificates(soap, &soap_tmp___ns1__DeleteCertificates, "-ns1:DeleteCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteCertificates(soap, &soap_tmp___ns1__DeleteCertificates, "-ns1:DeleteCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DeleteCertificatesResponse*>(&ns1__DeleteCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DeleteCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteCertificatesResponse.soap_get(soap, "ns1:DeleteCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetPkcs10Request(const char *endpoint, const char *soap_action, _ns1__GetPkcs10Request *ns1__GetPkcs10Request, _ns1__GetPkcs10RequestResponse &ns1__GetPkcs10RequestResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetPkcs10Request soap_tmp___ns1__GetPkcs10Request;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request";
	soap_tmp___ns1__GetPkcs10Request.ns1__GetPkcs10Request = ns1__GetPkcs10Request;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetPkcs10Request(soap, &soap_tmp___ns1__GetPkcs10Request);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetPkcs10Request(soap, &soap_tmp___ns1__GetPkcs10Request, "-ns1:GetPkcs10Request", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetPkcs10Request(soap, &soap_tmp___ns1__GetPkcs10Request, "-ns1:GetPkcs10Request", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetPkcs10RequestResponse*>(&ns1__GetPkcs10RequestResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetPkcs10RequestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetPkcs10RequestResponse.soap_get(soap, "ns1:GetPkcs10RequestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::LoadCertificates(const char *endpoint, const char *soap_action, _ns1__LoadCertificates *ns1__LoadCertificates, _ns1__LoadCertificatesResponse &ns1__LoadCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__LoadCertificates soap_tmp___ns1__LoadCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificates";
	soap_tmp___ns1__LoadCertificates.ns1__LoadCertificates = ns1__LoadCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__LoadCertificates(soap, &soap_tmp___ns1__LoadCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoadCertificates(soap, &soap_tmp___ns1__LoadCertificates, "-ns1:LoadCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoadCertificates(soap, &soap_tmp___ns1__LoadCertificates, "-ns1:LoadCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__LoadCertificatesResponse*>(&ns1__LoadCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__LoadCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoadCertificatesResponse.soap_get(soap, "ns1:LoadCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetClientCertificateMode(const char *endpoint, const char *soap_action, _ns1__GetClientCertificateMode *ns1__GetClientCertificateMode, _ns1__GetClientCertificateModeResponse &ns1__GetClientCertificateModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetClientCertificateMode soap_tmp___ns1__GetClientCertificateMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode";
	soap_tmp___ns1__GetClientCertificateMode.ns1__GetClientCertificateMode = ns1__GetClientCertificateMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetClientCertificateMode(soap, &soap_tmp___ns1__GetClientCertificateMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetClientCertificateMode(soap, &soap_tmp___ns1__GetClientCertificateMode, "-ns1:GetClientCertificateMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetClientCertificateMode(soap, &soap_tmp___ns1__GetClientCertificateMode, "-ns1:GetClientCertificateMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetClientCertificateModeResponse*>(&ns1__GetClientCertificateModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetClientCertificateModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetClientCertificateModeResponse.soap_get(soap, "ns1:GetClientCertificateModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetClientCertificateMode(const char *endpoint, const char *soap_action, _ns1__SetClientCertificateMode *ns1__SetClientCertificateMode, _ns1__SetClientCertificateModeResponse &ns1__SetClientCertificateModeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetClientCertificateMode soap_tmp___ns1__SetClientCertificateMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode";
	soap_tmp___ns1__SetClientCertificateMode.ns1__SetClientCertificateMode = ns1__SetClientCertificateMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetClientCertificateMode(soap, &soap_tmp___ns1__SetClientCertificateMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetClientCertificateMode(soap, &soap_tmp___ns1__SetClientCertificateMode, "-ns1:SetClientCertificateMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetClientCertificateMode(soap, &soap_tmp___ns1__SetClientCertificateMode, "-ns1:SetClientCertificateMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetClientCertificateModeResponse*>(&ns1__SetClientCertificateModeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetClientCertificateModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetClientCertificateModeResponse.soap_get(soap, "ns1:SetClientCertificateModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetRelayOutputs(const char *endpoint, const char *soap_action, _ns1__GetRelayOutputs *ns1__GetRelayOutputs, _ns1__GetRelayOutputsResponse &ns1__GetRelayOutputsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetRelayOutputs soap_tmp___ns1__GetRelayOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs";
	soap_tmp___ns1__GetRelayOutputs.ns1__GetRelayOutputs = ns1__GetRelayOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs, "-ns1:GetRelayOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs, "-ns1:GetRelayOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetRelayOutputsResponse*>(&ns1__GetRelayOutputsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetRelayOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRelayOutputsResponse.soap_get(soap, "ns1:GetRelayOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetRelayOutputSettings(const char *endpoint, const char *soap_action, _ns1__SetRelayOutputSettings *ns1__SetRelayOutputSettings, _ns1__SetRelayOutputSettingsResponse &ns1__SetRelayOutputSettingsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetRelayOutputSettings soap_tmp___ns1__SetRelayOutputSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings";
	soap_tmp___ns1__SetRelayOutputSettings.ns1__SetRelayOutputSettings = ns1__SetRelayOutputSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings, "-ns1:SetRelayOutputSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings, "-ns1:SetRelayOutputSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetRelayOutputSettingsResponse*>(&ns1__SetRelayOutputSettingsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetRelayOutputSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRelayOutputSettingsResponse.soap_get(soap, "ns1:SetRelayOutputSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetRelayOutputState(const char *endpoint, const char *soap_action, _ns1__SetRelayOutputState *ns1__SetRelayOutputState, _ns1__SetRelayOutputStateResponse &ns1__SetRelayOutputStateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetRelayOutputState soap_tmp___ns1__SetRelayOutputState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState";
	soap_tmp___ns1__SetRelayOutputState.ns1__SetRelayOutputState = ns1__SetRelayOutputState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState, "-ns1:SetRelayOutputState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState, "-ns1:SetRelayOutputState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetRelayOutputStateResponse*>(&ns1__SetRelayOutputStateResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetRelayOutputStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRelayOutputStateResponse.soap_get(soap, "ns1:SetRelayOutputStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SendAuxiliaryCommand(const char *endpoint, const char *soap_action, _ns1__SendAuxiliaryCommand *ns1__SendAuxiliaryCommand, _ns1__SendAuxiliaryCommandResponse &ns1__SendAuxiliaryCommandResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SendAuxiliaryCommand soap_tmp___ns1__SendAuxiliaryCommand;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand";
	soap_tmp___ns1__SendAuxiliaryCommand.ns1__SendAuxiliaryCommand = ns1__SendAuxiliaryCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SendAuxiliaryCommand(soap, &soap_tmp___ns1__SendAuxiliaryCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SendAuxiliaryCommand(soap, &soap_tmp___ns1__SendAuxiliaryCommand, "-ns1:SendAuxiliaryCommand", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SendAuxiliaryCommand(soap, &soap_tmp___ns1__SendAuxiliaryCommand, "-ns1:SendAuxiliaryCommand", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SendAuxiliaryCommandResponse*>(&ns1__SendAuxiliaryCommandResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SendAuxiliaryCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendAuxiliaryCommandResponse.soap_get(soap, "ns1:SendAuxiliaryCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetCACertificates(const char *endpoint, const char *soap_action, _ns1__GetCACertificates *ns1__GetCACertificates, _ns1__GetCACertificatesResponse &ns1__GetCACertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCACertificates soap_tmp___ns1__GetCACertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCACertificates";
	soap_tmp___ns1__GetCACertificates.ns1__GetCACertificates = ns1__GetCACertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCACertificates(soap, &soap_tmp___ns1__GetCACertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCACertificates(soap, &soap_tmp___ns1__GetCACertificates, "-ns1:GetCACertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCACertificates(soap, &soap_tmp___ns1__GetCACertificates, "-ns1:GetCACertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCACertificatesResponse*>(&ns1__GetCACertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCACertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCACertificatesResponse.soap_get(soap, "ns1:GetCACertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::LoadCertificateWithPrivateKey(const char *endpoint, const char *soap_action, _ns1__LoadCertificateWithPrivateKey *ns1__LoadCertificateWithPrivateKey, _ns1__LoadCertificateWithPrivateKeyResponse &ns1__LoadCertificateWithPrivateKeyResponse)
{	struct soap *soap = this->soap;
	struct __ns1__LoadCertificateWithPrivateKey soap_tmp___ns1__LoadCertificateWithPrivateKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey";
	soap_tmp___ns1__LoadCertificateWithPrivateKey.ns1__LoadCertificateWithPrivateKey = ns1__LoadCertificateWithPrivateKey;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__LoadCertificateWithPrivateKey(soap, &soap_tmp___ns1__LoadCertificateWithPrivateKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoadCertificateWithPrivateKey(soap, &soap_tmp___ns1__LoadCertificateWithPrivateKey, "-ns1:LoadCertificateWithPrivateKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoadCertificateWithPrivateKey(soap, &soap_tmp___ns1__LoadCertificateWithPrivateKey, "-ns1:LoadCertificateWithPrivateKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__LoadCertificateWithPrivateKeyResponse*>(&ns1__LoadCertificateWithPrivateKeyResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__LoadCertificateWithPrivateKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoadCertificateWithPrivateKeyResponse.soap_get(soap, "ns1:LoadCertificateWithPrivateKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetCertificateInformation(const char *endpoint, const char *soap_action, _ns1__GetCertificateInformation *ns1__GetCertificateInformation, _ns1__GetCertificateInformationResponse &ns1__GetCertificateInformationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetCertificateInformation soap_tmp___ns1__GetCertificateInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation";
	soap_tmp___ns1__GetCertificateInformation.ns1__GetCertificateInformation = ns1__GetCertificateInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCertificateInformation(soap, &soap_tmp___ns1__GetCertificateInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCertificateInformation(soap, &soap_tmp___ns1__GetCertificateInformation, "-ns1:GetCertificateInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCertificateInformation(soap, &soap_tmp___ns1__GetCertificateInformation, "-ns1:GetCertificateInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCertificateInformationResponse*>(&ns1__GetCertificateInformationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCertificateInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCertificateInformationResponse.soap_get(soap, "ns1:GetCertificateInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::LoadCACertificates(const char *endpoint, const char *soap_action, _ns1__LoadCACertificates *ns1__LoadCACertificates, _ns1__LoadCACertificatesResponse &ns1__LoadCACertificatesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__LoadCACertificates soap_tmp___ns1__LoadCACertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates";
	soap_tmp___ns1__LoadCACertificates.ns1__LoadCACertificates = ns1__LoadCACertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__LoadCACertificates(soap, &soap_tmp___ns1__LoadCACertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoadCACertificates(soap, &soap_tmp___ns1__LoadCACertificates, "-ns1:LoadCACertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoadCACertificates(soap, &soap_tmp___ns1__LoadCACertificates, "-ns1:LoadCACertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__LoadCACertificatesResponse*>(&ns1__LoadCACertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__LoadCACertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoadCACertificatesResponse.soap_get(soap, "ns1:LoadCACertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::CreateDot1XConfiguration(const char *endpoint, const char *soap_action, _ns1__CreateDot1XConfiguration *ns1__CreateDot1XConfiguration, _ns1__CreateDot1XConfigurationResponse &ns1__CreateDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateDot1XConfiguration soap_tmp___ns1__CreateDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration";
	soap_tmp___ns1__CreateDot1XConfiguration.ns1__CreateDot1XConfiguration = ns1__CreateDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateDot1XConfiguration(soap, &soap_tmp___ns1__CreateDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateDot1XConfiguration(soap, &soap_tmp___ns1__CreateDot1XConfiguration, "-ns1:CreateDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateDot1XConfiguration(soap, &soap_tmp___ns1__CreateDot1XConfiguration, "-ns1:CreateDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CreateDot1XConfigurationResponse*>(&ns1__CreateDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateDot1XConfigurationResponse.soap_get(soap, "ns1:CreateDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetDot1XConfiguration(const char *endpoint, const char *soap_action, _ns1__SetDot1XConfiguration *ns1__SetDot1XConfiguration, _ns1__SetDot1XConfigurationResponse &ns1__SetDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetDot1XConfiguration soap_tmp___ns1__SetDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration";
	soap_tmp___ns1__SetDot1XConfiguration.ns1__SetDot1XConfiguration = ns1__SetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDot1XConfiguration(soap, &soap_tmp___ns1__SetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDot1XConfiguration(soap, &soap_tmp___ns1__SetDot1XConfiguration, "-ns1:SetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDot1XConfiguration(soap, &soap_tmp___ns1__SetDot1XConfiguration, "-ns1:SetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDot1XConfigurationResponse*>(&ns1__SetDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDot1XConfigurationResponse.soap_get(soap, "ns1:SetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDot1XConfiguration(const char *endpoint, const char *soap_action, _ns1__GetDot1XConfiguration *ns1__GetDot1XConfiguration, _ns1__GetDot1XConfigurationResponse &ns1__GetDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDot1XConfiguration soap_tmp___ns1__GetDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration";
	soap_tmp___ns1__GetDot1XConfiguration.ns1__GetDot1XConfiguration = ns1__GetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration, "-ns1:GetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDot1XConfiguration(soap, &soap_tmp___ns1__GetDot1XConfiguration, "-ns1:GetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDot1XConfigurationResponse*>(&ns1__GetDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDot1XConfigurationResponse.soap_get(soap, "ns1:GetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDot1XConfigurations(const char *endpoint, const char *soap_action, _ns1__GetDot1XConfigurations *ns1__GetDot1XConfigurations, _ns1__GetDot1XConfigurationsResponse &ns1__GetDot1XConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDot1XConfigurations soap_tmp___ns1__GetDot1XConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations";
	soap_tmp___ns1__GetDot1XConfigurations.ns1__GetDot1XConfigurations = ns1__GetDot1XConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDot1XConfigurations(soap, &soap_tmp___ns1__GetDot1XConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDot1XConfigurations(soap, &soap_tmp___ns1__GetDot1XConfigurations, "-ns1:GetDot1XConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDot1XConfigurations(soap, &soap_tmp___ns1__GetDot1XConfigurations, "-ns1:GetDot1XConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDot1XConfigurationsResponse*>(&ns1__GetDot1XConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDot1XConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDot1XConfigurationsResponse.soap_get(soap, "ns1:GetDot1XConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::DeleteDot1XConfiguration(const char *endpoint, const char *soap_action, _ns1__DeleteDot1XConfiguration *ns1__DeleteDot1XConfiguration, _ns1__DeleteDot1XConfigurationResponse &ns1__DeleteDot1XConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteDot1XConfiguration soap_tmp___ns1__DeleteDot1XConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration";
	soap_tmp___ns1__DeleteDot1XConfiguration.ns1__DeleteDot1XConfiguration = ns1__DeleteDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration, "-ns1:DeleteDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteDot1XConfiguration(soap, &soap_tmp___ns1__DeleteDot1XConfiguration, "-ns1:DeleteDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DeleteDot1XConfigurationResponse*>(&ns1__DeleteDot1XConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DeleteDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteDot1XConfigurationResponse.soap_get(soap, "ns1:DeleteDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDot11Capabilities(const char *endpoint, const char *soap_action, _ns1__GetDot11Capabilities *ns1__GetDot11Capabilities, _ns1__GetDot11CapabilitiesResponse &ns1__GetDot11CapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDot11Capabilities soap_tmp___ns1__GetDot11Capabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities";
	soap_tmp___ns1__GetDot11Capabilities.ns1__GetDot11Capabilities = ns1__GetDot11Capabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDot11Capabilities(soap, &soap_tmp___ns1__GetDot11Capabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDot11Capabilities(soap, &soap_tmp___ns1__GetDot11Capabilities, "-ns1:GetDot11Capabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDot11Capabilities(soap, &soap_tmp___ns1__GetDot11Capabilities, "-ns1:GetDot11Capabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDot11CapabilitiesResponse*>(&ns1__GetDot11CapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDot11CapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDot11CapabilitiesResponse.soap_get(soap, "ns1:GetDot11CapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetDot11Status(const char *endpoint, const char *soap_action, _ns1__GetDot11Status *ns1__GetDot11Status, _ns1__GetDot11StatusResponse &ns1__GetDot11StatusResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetDot11Status soap_tmp___ns1__GetDot11Status;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Status";
	soap_tmp___ns1__GetDot11Status.ns1__GetDot11Status = ns1__GetDot11Status;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDot11Status(soap, &soap_tmp___ns1__GetDot11Status);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDot11Status(soap, &soap_tmp___ns1__GetDot11Status, "-ns1:GetDot11Status", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDot11Status(soap, &soap_tmp___ns1__GetDot11Status, "-ns1:GetDot11Status", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDot11StatusResponse*>(&ns1__GetDot11StatusResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDot11StatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDot11StatusResponse.soap_get(soap, "ns1:GetDot11StatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::ScanAvailableDot11Networks(const char *endpoint, const char *soap_action, _ns1__ScanAvailableDot11Networks *ns1__ScanAvailableDot11Networks, _ns1__ScanAvailableDot11NetworksResponse &ns1__ScanAvailableDot11NetworksResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ScanAvailableDot11Networks soap_tmp___ns1__ScanAvailableDot11Networks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks";
	soap_tmp___ns1__ScanAvailableDot11Networks.ns1__ScanAvailableDot11Networks = ns1__ScanAvailableDot11Networks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ScanAvailableDot11Networks(soap, &soap_tmp___ns1__ScanAvailableDot11Networks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ScanAvailableDot11Networks(soap, &soap_tmp___ns1__ScanAvailableDot11Networks, "-ns1:ScanAvailableDot11Networks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ScanAvailableDot11Networks(soap, &soap_tmp___ns1__ScanAvailableDot11Networks, "-ns1:ScanAvailableDot11Networks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ScanAvailableDot11NetworksResponse*>(&ns1__ScanAvailableDot11NetworksResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ScanAvailableDot11NetworksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ScanAvailableDot11NetworksResponse.soap_get(soap, "ns1:ScanAvailableDot11NetworksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetSystemUris(const char *endpoint, const char *soap_action, _ns1__GetSystemUris *ns1__GetSystemUris, _ns1__GetSystemUrisResponse &ns1__GetSystemUrisResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetSystemUris soap_tmp___ns1__GetSystemUris;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemUris";
	soap_tmp___ns1__GetSystemUris.ns1__GetSystemUris = ns1__GetSystemUris;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSystemUris(soap, &soap_tmp___ns1__GetSystemUris);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSystemUris(soap, &soap_tmp___ns1__GetSystemUris, "-ns1:GetSystemUris", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSystemUris(soap, &soap_tmp___ns1__GetSystemUris, "-ns1:GetSystemUris", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetSystemUrisResponse*>(&ns1__GetSystemUrisResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetSystemUrisResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSystemUrisResponse.soap_get(soap, "ns1:GetSystemUrisResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::StartFirmwareUpgrade(const char *endpoint, const char *soap_action, _ns1__StartFirmwareUpgrade *ns1__StartFirmwareUpgrade, _ns1__StartFirmwareUpgradeResponse &ns1__StartFirmwareUpgradeResponse)
{	struct soap *soap = this->soap;
	struct __ns1__StartFirmwareUpgrade soap_tmp___ns1__StartFirmwareUpgrade;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade";
	soap_tmp___ns1__StartFirmwareUpgrade.ns1__StartFirmwareUpgrade = ns1__StartFirmwareUpgrade;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__StartFirmwareUpgrade(soap, &soap_tmp___ns1__StartFirmwareUpgrade);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StartFirmwareUpgrade(soap, &soap_tmp___ns1__StartFirmwareUpgrade, "-ns1:StartFirmwareUpgrade", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StartFirmwareUpgrade(soap, &soap_tmp___ns1__StartFirmwareUpgrade, "-ns1:StartFirmwareUpgrade", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__StartFirmwareUpgradeResponse*>(&ns1__StartFirmwareUpgradeResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__StartFirmwareUpgradeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StartFirmwareUpgradeResponse.soap_get(soap, "ns1:StartFirmwareUpgradeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::StartSystemRestore(const char *endpoint, const char *soap_action, _ns1__StartSystemRestore *ns1__StartSystemRestore, _ns1__StartSystemRestoreResponse &ns1__StartSystemRestoreResponse)
{	struct soap *soap = this->soap;
	struct __ns1__StartSystemRestore soap_tmp___ns1__StartSystemRestore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore";
	soap_tmp___ns1__StartSystemRestore.ns1__StartSystemRestore = ns1__StartSystemRestore;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__StartSystemRestore(soap, &soap_tmp___ns1__StartSystemRestore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StartSystemRestore(soap, &soap_tmp___ns1__StartSystemRestore, "-ns1:StartSystemRestore", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StartSystemRestore(soap, &soap_tmp___ns1__StartSystemRestore, "-ns1:StartSystemRestore", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__StartSystemRestoreResponse*>(&ns1__StartSystemRestoreResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__StartSystemRestoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StartSystemRestoreResponse.soap_get(soap, "ns1:StartSystemRestoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetStorageConfigurations(const char *endpoint, const char *soap_action, _ns1__GetStorageConfigurations *ns1__GetStorageConfigurations, _ns1__GetStorageConfigurationsResponse &ns1__GetStorageConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetStorageConfigurations soap_tmp___ns1__GetStorageConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations";
	soap_tmp___ns1__GetStorageConfigurations.ns1__GetStorageConfigurations = ns1__GetStorageConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStorageConfigurations(soap, &soap_tmp___ns1__GetStorageConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStorageConfigurations(soap, &soap_tmp___ns1__GetStorageConfigurations, "-ns1:GetStorageConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStorageConfigurations(soap, &soap_tmp___ns1__GetStorageConfigurations, "-ns1:GetStorageConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetStorageConfigurationsResponse*>(&ns1__GetStorageConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetStorageConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStorageConfigurationsResponse.soap_get(soap, "ns1:GetStorageConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::CreateStorageConfiguration(const char *endpoint, const char *soap_action, _ns1__CreateStorageConfiguration *ns1__CreateStorageConfiguration, _ns1__CreateStorageConfigurationResponse &ns1__CreateStorageConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateStorageConfiguration soap_tmp___ns1__CreateStorageConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration";
	soap_tmp___ns1__CreateStorageConfiguration.ns1__CreateStorageConfiguration = ns1__CreateStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateStorageConfiguration(soap, &soap_tmp___ns1__CreateStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateStorageConfiguration(soap, &soap_tmp___ns1__CreateStorageConfiguration, "-ns1:CreateStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateStorageConfiguration(soap, &soap_tmp___ns1__CreateStorageConfiguration, "-ns1:CreateStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CreateStorageConfigurationResponse*>(&ns1__CreateStorageConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CreateStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateStorageConfigurationResponse.soap_get(soap, "ns1:CreateStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::GetStorageConfiguration(const char *endpoint, const char *soap_action, _ns1__GetStorageConfiguration *ns1__GetStorageConfiguration, _ns1__GetStorageConfigurationResponse &ns1__GetStorageConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetStorageConfiguration soap_tmp___ns1__GetStorageConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration";
	soap_tmp___ns1__GetStorageConfiguration.ns1__GetStorageConfiguration = ns1__GetStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStorageConfiguration(soap, &soap_tmp___ns1__GetStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStorageConfiguration(soap, &soap_tmp___ns1__GetStorageConfiguration, "-ns1:GetStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStorageConfiguration(soap, &soap_tmp___ns1__GetStorageConfiguration, "-ns1:GetStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetStorageConfigurationResponse*>(&ns1__GetStorageConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStorageConfigurationResponse.soap_get(soap, "ns1:GetStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::SetStorageConfiguration(const char *endpoint, const char *soap_action, _ns1__SetStorageConfiguration *ns1__SetStorageConfiguration, _ns1__SetStorageConfigurationResponse &ns1__SetStorageConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetStorageConfiguration soap_tmp___ns1__SetStorageConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration";
	soap_tmp___ns1__SetStorageConfiguration.ns1__SetStorageConfiguration = ns1__SetStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetStorageConfiguration(soap, &soap_tmp___ns1__SetStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetStorageConfiguration(soap, &soap_tmp___ns1__SetStorageConfiguration, "-ns1:SetStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetStorageConfiguration(soap, &soap_tmp___ns1__SetStorageConfiguration, "-ns1:SetStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetStorageConfigurationResponse*>(&ns1__SetStorageConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetStorageConfigurationResponse.soap_get(soap, "ns1:SetStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceBindingProxy::DeleteStorageConfiguration(const char *endpoint, const char *soap_action, _ns1__DeleteStorageConfiguration *ns1__DeleteStorageConfiguration, _ns1__DeleteStorageConfigurationResponse &ns1__DeleteStorageConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteStorageConfiguration soap_tmp___ns1__DeleteStorageConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration";
	soap_tmp___ns1__DeleteStorageConfiguration.ns1__DeleteStorageConfiguration = ns1__DeleteStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteStorageConfiguration(soap, &soap_tmp___ns1__DeleteStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteStorageConfiguration(soap, &soap_tmp___ns1__DeleteStorageConfiguration, "-ns1:DeleteStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteStorageConfiguration(soap, &soap_tmp___ns1__DeleteStorageConfiguration, "-ns1:DeleteStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__DeleteStorageConfigurationResponse*>(&ns1__DeleteStorageConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__DeleteStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteStorageConfigurationResponse.soap_get(soap, "ns1:DeleteStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
